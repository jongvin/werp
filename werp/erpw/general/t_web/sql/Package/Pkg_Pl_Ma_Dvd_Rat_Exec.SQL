CREATE OR REPLACE PACKAGE Pkg_Pl_Ma_Dvd_Rat_Exec
IS
	FUNCTION	Get_HIST_SEQ
	RETURN T_PL_MA_DVD_RAT_LIST.HIST_SEQ%TYPE;
	
	FUNCTION	Get_CRTUSERNO
	RETURN T_PL_MA_DVD_RAT_LIST.CRTUSERNO%TYPE;

	FUNCTION	Get_DVD_CODE
	RETURN T_PL_MA_DVD_CODE.DVD_CODE%TYPE;

	FUNCTION	Get_FUNC_NAME
	RETURN T_PL_MA_DVD_CODE.FUNC_NAME%TYPE;
	
	PROCEDURE	ProcessBatch
	(
		Ar_HIST_SEQ			T_PL_MA_DVD_RAT_LIST.HIST_SEQ%TYPE,
		Ar_DVD_CODE			T_PL_MA_DVD_RAT_LIST.DVD_CODE%TYPE,
		Ar_CRTUSERNO			T_PL_MA_DVD_RAT_LIST.CRTUSERNO%TYPE
	);
	PROCEDURE	DvdRate01;
	PROCEDURE	DvdRate02;
END;
/

CREATE OR REPLACE PACKAGE BODY Pkg_Pl_Ma_Dvd_Rat_Exec
IS
	TYPE	T_DVD_CODES	IS TABLE OF T_PL_MA_DVD_CODE.DVD_CODE%TYPE
		INDEX BY BINARY_INTEGER;
		
	TYPE	T_FUNC_NAMES	IS TABLE OF T_PL_MA_DVD_CODE.FUNC_NAME%TYPE
		INDEX BY BINARY_INTEGER;
	
	G_HIST_SEQ			   T_PL_MA_DVD_RAT_LIST.HIST_SEQ%TYPE;
	G_CRTUSERNO			T_PL_MA_DVD_RAT_LIST.CRTUSERNO%TYPE;
	G_DVD_CODE  		T_PL_MA_DVD_CODE.DVD_CODE%TYPE;
	G_FUNC_NAME			T_PL_MA_DVD_CODE.FUNC_NAME%TYPE;
	
	G_DVD_CODES				T_DVD_CODES;
	G_FUNC_NAMES			T_FUNC_NAMES;
	
	FUNCTION	Get_HIST_SEQ
	RETURN T_PL_MA_DVD_RAT_LIST.HIST_SEQ%TYPE
	IS
	BEGIN
		RETURN G_HIST_SEQ ;
	END;
	
	FUNCTION	Get_CRTUSERNO
	RETURN T_PL_MA_DVD_RAT_LIST.CRTUSERNO%TYPE
	IS
	BEGIN
		RETURN G_CRTUSERNO ;
	END;
	
	FUNCTION	Get_DVD_CODE
	RETURN T_PL_MA_DVD_CODE.DVD_CODE%TYPE
	IS
	BEGIN
		RETURN G_DVD_CODE ;
	END;
	
	FUNCTION	Get_FUNC_NAME
	RETURN T_PL_MA_DVD_CODE.FUNC_NAME%TYPE
	IS
	BEGIN
		RETURN G_FUNC_NAME ;
	END;
	
	PROCEDURE	ClearData
	(
		Ar_HIST_SEQ					T_PL_MA_DVD_RAT_LIST.HIST_SEQ%TYPE,
		Ar_DVD_CODE					T_PL_MA_DVD_RAT_LIST.DVD_CODE%TYPE
	)
	IS
	BEGIN
		DELETE
			T_PL_MA_DVD_RAT_LIST
		WHERE
			HIST_SEQ = Ar_HIST_SEQ
			AND DVD_CODE LIKE Ar_DVD_CODE||'%';
	END;
	
	PROCEDURE	ProcessBatch
	(
		Ar_HIST_SEQ					T_PL_MA_DVD_RAT_LIST.HIST_SEQ%TYPE,
		Ar_DVD_CODE				   T_PL_MA_DVD_RAT_LIST.DVD_CODE%TYPE,
		Ar_CRTUSERNO			 T_PL_MA_DVD_RAT_LIST.CRTUSERNO%TYPE
	)
	IS
		liFirst						NUMBER;
		liLast						NUMBER;
	BEGIN
		ClearData(Ar_HIST_SEQ, Ar_DVD_CODE);
		
		G_HIST_SEQ 	   := Ar_HIST_SEQ;
		G_CRTUSERNO := Ar_CRTUSERNO;	
			
		SELECT
			DVD_CODE,			
			FUNC_NAME
		BULK COLLECT INTO
			G_DVD_CODES,			
			G_FUNC_NAMES
		FROM
			T_PL_MA_DVD_CODE
		ORDER BY
			DVD_CODE;

		IF G_FUNC_NAMES.COUNT > 0 THEN
			liFirst := G_FUNC_NAMES.First;
			liLast := G_FUNC_NAMES.Last;
			FOR liI IN liFirst..liLast LOOP
				IF G_FUNC_NAMES(liI) IS NOT NULL THEN
				   	G_DVD_CODE	  := G_DVD_CODES(liI);
					G_FUNC_NAME  := G_FUNC_NAMES(liI);
					IF (Ar_DVD_CODE = '%') OR (Ar_DVD_CODE = G_DVD_CODE) THEN
					   EXECUTE IMMEDIATE 'Begin '||G_FUNC_NAME||'; End;';
					END IF;
				END IF;
			END LOOP;
		END IF;
	END;

	PROCEDURE	DvdRate01
	IS
	  	lrDVD_RAT_HIST T_PL_MA_DVD_RAT_HIST%ROWTYPE;
		--lddtf			DATE := TO_DATE(G_HIST_SEQ||'01','YYYYMMDD');
		--lddtt			DATE := LAST_DAY(TO_DATE(G_HIST_SEQ||'01','YYYYMMDD'));
		lnHistSeq		T_PL_MA_DVD_RAT_LIST.HIST_SEQ%TYPE;
		lsCrtUserNo	  T_PL_MA_DVD_RAT_LIST.CRTUSERNO%TYPE;
		lsDvdCode	  T_PL_MA_DVD_CODE.DVD_CODE%TYPE;
	BEGIN
		lnHistSeq		:= Get_HIST_SEQ();
		lsCrtUserNo	  := Get_CRTUSERNO();
		lsDvdCode	  := Get_DVD_CODE();

		BEGIN
			SELECT
				*
			INTO
				lrDVD_RAT_HIST
			FROM	T_PL_MA_DVD_RAT_HIST a
			WHERE	a.HIST_SEQ = lnHistSeq;
		EXCEPTION WHEN NO_DATA_FOUND THEN
			RAISE_APPLICATION_ERROR	(-20009, '해당 변경차수를 찾을 수 없습니다.' );
		END;
		
		INSERT INTO T_PL_MA_DVD_RAT_LIST
		(
			HIST_SEQ,
			DVD_CODE,
			DEPT_CODE,
			CRTUSERNO,
			CRTDATE,
			MODUSERNO,
			MODDATE,
			DVD_RAT_POSITION
		)
		SELECT
			lnHistSeq,
			lsDvdCode,
			A.DEPT_CODE, 
			lsCrtUserNo,
			SYSDATE,
			NULL,
			NULL,
			B.DVD_RATE_POSITION
		FROM
			T_DEPT_CODE A,
			(
				SELECT
					A.DEPT_CODE, 
					SUM(
						CASE 
							WHEN B.ACC_REMAIN_POSITION = 'D' THEN
								 NVL(A.DB_AMT, 0)-NVL(A.CR_AMT, 0)
							ELSE
								NVL(A.CR_AMT, 0)-NVL(A.DB_AMT, 0)
						END
					) DVD_RATE_POSITION
				FROM
					T_ACC_SLIP_BODY1 A,
					T_ACC_CODE B
				WHERE
					 A.ACC_CODE = B.ACC_CODE
					 AND A.TRANSFER_TAG = 'F'
					 AND A.KEEP_DT IS NOT NULL
					 AND A.SLIP_KIND_TAG <> 'D'
					 AND A.MAKE_DT BETWEEN F_T_Stringtodate(TO_CHAR(lrDVD_RAT_HIST.APPL_DT,'YYYYMM')||'01') AND lrDVD_RAT_HIST.APPL_DT
					 AND A.ACC_CODE LIKE '51%'
				GROUP BY
					 A.DEPT_CODE
			) B
			WHERE
				A.DEPT_CODE = B.DEPT_CODE(+)
				AND ( B.DEPT_CODE IS NOT NULL );
	END;
	
	PROCEDURE	DvdRate02
	IS
	  	lrDVD_RAT_HIST T_PL_MA_DVD_RAT_HIST%ROWTYPE;
		--lddtf			DATE := TO_DATE(G_HIST_SEQ||'01','YYYYMMDD');
		--lddtt			DATE := LAST_DAY(TO_DATE(G_HIST_SEQ||'01','YYYYMMDD'));
		lnHistSeq		T_PL_MA_DVD_RAT_LIST.HIST_SEQ%TYPE;
		lsCrtUserNo	  T_PL_MA_DVD_RAT_LIST.CRTUSERNO%TYPE;
		lsDvdCode	  T_PL_MA_DVD_CODE.DVD_CODE%TYPE;
	BEGIN
		lnHistSeq		:= Get_HIST_SEQ();
		lsCrtUserNo	  := Get_CRTUSERNO();
		lsDvdCode	  := Get_DVD_CODE();
		
		BEGIN
			SELECT
				*
			INTO
				lrDVD_RAT_HIST
			FROM	T_PL_MA_DVD_RAT_HIST a
			WHERE	a.HIST_SEQ = lnHistSeq;
		EXCEPTION WHEN NO_DATA_FOUND THEN
			RAISE_APPLICATION_ERROR	(-20009, '해당 변경차수를 찾을 수 없습니다.' );
		END;
		
		INSERT INTO T_PL_MA_DVD_RAT_LIST
		(
			HIST_SEQ,
			DVD_CODE,
			DEPT_CODE,
			CRTUSERNO,
			CRTDATE,
			MODUSERNO,
			MODDATE,
			DVD_RAT_POSITION
		)
		SELECT
			lnHistSeq,
			lsDvdCode,
			A.DEPT_CODE, 
			lsCrtUserNo,
			SYSDATE,
			NULL,
			NULL,
			NVL(B.DVD_RATE_POSITION, 0) - NVL(C.DVD_RATE_POSITION, 0)
		FROM
			T_DEPT_CODE A,
			(
				SELECT
					A.DEPT_CODE, 
					SUM(
						CASE 
							WHEN B.ACC_REMAIN_POSITION = 'D' THEN
								 NVL(A.DB_AMT, 0)-NVL(A.CR_AMT, 0)
							ELSE
								NVL(A.CR_AMT, 0)-NVL(A.DB_AMT, 0)
						END
					) DVD_RATE_POSITION
				FROM
					T_ACC_SLIP_BODY1 A,
					T_ACC_CODE B
				WHERE
					 A.ACC_CODE = B.ACC_CODE
					 AND A.MAKE_DT BETWEEN F_T_Stringtodate(TO_CHAR(lrDVD_RAT_HIST.APPL_DT,'YYYYMM')||'01') AND lrDVD_RAT_HIST.APPL_DT
					 AND A.ACC_CODE LIKE '51%'
				GROUP BY
					 A.DEPT_CODE
			) B,
			(
				SELECT
					A.DEPT_CODE, 
					SUM(
						CASE 
							WHEN B.ACC_REMAIN_POSITION = 'D' THEN
								NVL(A.DB_AMT, 0)-NVL(A.CR_AMT, 0)
							ELSE
								NVL(A.CR_AMT, 0)-NVL(A.DB_AMT, 0)
						END
					)  DVD_RATE_POSITION
				FROM
					T_ACC_SLIP_BODY1 A,
					T_ACC_CODE B
				WHERE
					 A.ACC_CODE = B.ACC_CODE
					 AND A.TRANSFER_TAG = 'F'
					 AND A.KEEP_DT IS NOT NULL
					 AND A.SLIP_KIND_TAG <> 'D'
					 AND A.MAKE_DT BETWEEN F_T_Stringtodate(TO_CHAR(lrDVD_RAT_HIST.APPL_DT,'YYYYMM')||'01') AND lrDVD_RAT_HIST.APPL_DT
					 AND A.ACC_CODE LIKE '52%'
				GROUP BY
					 A.DEPT_CODE
			) C
			WHERE
				A.DEPT_CODE = B.DEPT_CODE(+)
				AND A.DEPT_CODE = C.DEPT_CODE(+)
				AND ( B.DEPT_CODE IS NOT NULL OR C.DEPT_CODE IS NOT NULL );
	END;
END;
/

CREATE OR REPLACE PROCEDURE Sp_T_U_Pl_Ma_DVD_RAT01
IS
BEGIN
    Pkg_Pl_Ma_Dvd_Rat_Exec.DvdRate01;
END;
/

CREATE OR REPLACE PROCEDURE Sp_T_U_Pl_Ma_DVD_RAT02
IS
BEGIN
    Pkg_Pl_Ma_Dvd_Rat_Exec.DvdRate02;
END;
/
