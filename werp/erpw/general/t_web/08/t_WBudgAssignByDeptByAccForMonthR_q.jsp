<%@ page import="com.cj.common.*, com.cj.database.*, com.cj.util.*, com.gauce.*, com.gauce.io.*, java.sql.*" errorPage="../common/Error.jsp" contentType="text/html;charset=euc-kr"%>
<%
/**************************************************************************/
/* 1. 프 로 그 램 id :
/* 2. 유형(시나리오) : Select Page
/* 3. 기  능  정  의 :
/* 4. 변  경  이  력 : 한재원 작성(2005-12-18)
/* 5. 관련  프로그램 :
/* 6. 특  기  사  항 :
/**************************************************************************/

	CITGauceInfo GauceInfo = null;

	CITData lrReturnData = null;
	GauceDataSet lrDataset = null;
	String	strSql = "";
	String	strAct = "";
	String	strUserNo = "";
	String      ssCompCode = "";
	String      ssDeptCode = "";
	String      ssDeptName = "";
	String     ssPrivLevel ="";
	String     ssDeptShortName ="";
	try
	{
		GauceInfo = CITCommon.initServerPage(request, response, session);
		strUserNo = CITCommon.toKOR((String)session.getAttribute("emp_no"));
		ssCompCode = CITCommon.toKOR((String)session.getAttribute("comp_code"));
		ssDeptCode = CITCommon.toKOR((String)session.getAttribute("dept_code"));
		ssDeptName = CITCommon.toKOR((String)session.getAttribute("long_name"));

		CITData lrArgData = new CITData();

		strAct = CITCommon.toKOR(request.getParameter("ACT"));

		if (strAct.equals("LIST00"))
		{
			String vCompCode = CITCommon.toKOR(request.getParameter("COMP_CODE"));
			String vBudgYyyy = CITCommon.toKOR(request.getParameter("BUDG_YYYY"));

				strSql  = "select '"+vCompCode+"' COMP_CODE, '%' DEPT_CODE, '전  체' DEPT_NAME, '전  체' DEPT_SHORT_NAME \n";
				strSql += "from dual a \n";
				strSql += "union all \n";
				strSql += "select a.COMP_CODE, a.DEPT_CODE, a.DEPT_NAME, a.DEPT_SHORT_NAME \n";
				strSql += "from T_DEPT_CODE a, \n";
				strSql += "	 ( \n";
				strSql += "	  SELECT DEPT_CODE \n";
				strSql += "	  FROM T_BUDG_DEPT \n";
				strSql += "	  group by DEPT_CODE \n";
				strSql += "	 ) b \n";
				strSql  += "WHERE \n";
				strSql  += "     a.COMP_CODE = '"+vCompCode+"' \n";
				strSql += "	  and a.DEPT_CODE = b.DEPT_CODE \n";

			try
			{
				lrReturnData = CITDatabase.selectQuery(strSql, lrArgData);

				lrReturnData.setKey("COMP_CODE",true);
				lrReturnData.setKey("DEPT_CODE",true);

				lrReturnData.setColumnDisplaySize("DEPT_NAME", 100);
				lrReturnData.setColumnDisplaySize("DEPT_SHORT_NAME", 200);


				lrDataset = CITCommon.toGauceDataSet(lrReturnData);
				GauceInfo.response.enableFirstRow(lrDataset);
				lrDataset.flush();
			}
			catch (Exception ex)
			{
				if (GauceInfo != null)
				{
					GauceInfo.response.writeException("USER", "900001","MAIN Select 오류-> "+ ex.getMessage());
				}
				else
				{
					throw new Exception("USER-900001:MAIN Select 오류 -> " + ex.getMessage());
				}
			}
		}
		//전체
		else if (strAct.equals("LIST02"))
		{
			String strCOMP_CODE = CITCommon.toKOR(request.getParameter("COMP_CODE"));
			String strCLSE_ACC_ID = CITCommon.toKOR(request.getParameter("CLSE_ACC_ID"));
			String strDEPT_CODE = CITCommon.toKOR(request.getParameter("DEPT_CODE"));
			String strMONTH = CITCommon.toKOR(request.getParameter("MONTH"));
			String strDEPT_FLAG = CITCommon.toKOR(request.getParameter("DEPT_FLAG"));
			
			if(strDEPT_FLAG.equals("ALL"))
			{
				strSql  = " Select \n";
				strSql += " 	COMP_CODE, \n";
				strSql += " 	DEPT_CODE, \n";
				strSql += " 	CLSE_ACC_ID, \n";
				strSql += " 	P_BUDG_CODE_NO, \n";
				strSql += " 	BUDG_CODE_NO, \n";
				strSql += " 	BUDG_CODE_NAME acc_name, \n";
				strSql += " 	P_RN, \n";
				strSql += " 	RN, \n";
				strSql += " 	GrTot, \n";
				strSql += " 	P_BUDG_CODE_NAME p_acc_name, \n";
				strSql += " 	DEPT_NAME, \n";
				strSql += " 	BUDG_AMT first_budg_amt, \n";
				strSql += " 	BUDG_TOT first_budg_amt_sum_sum, \n";
				strSql += " 	SIL_AMT sil_amt, \n";
				strSql += " 	SIL_TOT sil_amt_sum, \n";
				strSql += " 	Nvl(BUDG_AMT,0) - Nvl(SIL_AMT,0) sub_budg_amt, \n";
				strSql += " 	Nvl(BUDG_TOT,0) - Nvl(SIL_TOT,0) sub_budg_amt_sum \n";
				strSql += " From \n";
				strSql += " 	( \n";
				strSql += " 		Select \n";
				strSql += " 			a.COMP_CODE, \n";
				strSql += " 			a.DEPT_CODE, \n";
				strSql += " 			a.CLSE_ACC_ID, \n";
				strSql += " 			a.P_BUDG_CODE_NO, \n";
				strSql += " 			a.BUDG_CODE_NO, \n";
				strSql += " 			a.BUDG_CODE_NAME, \n";
				strSql += " 			b.RN P_RN, \n";
				strSql += " 			a.RN, \n";
				strSql += " 			Grouping(a.DEPT_CODE) GrTot, \n";
				strSql += " 			Case When Grouping(b.RN) = 1 Then ' ' When Grouping(a.RN) = 1 Then b.BUDG_CODE_NAME ||' 계' Else b.BUDG_CODE_NAME End P_BUDG_CODE_NAME, \n";
				strSql += " 			Case When Grouping(b.RN) = 1 Then c.DEPT_NAME ||' 계' Else c.DEPT_NAME End DEPT_NAME, \n";
				strSql += " 			Sum(a.BUDG_AMT) BUDG_AMT, \n";
				strSql += " 			Sum(a.BUDG_TOT) BUDG_TOT, \n";
				strSql += " 			Sum(a.SIL_AMT) SIL_AMT, \n";
				strSql += " 			Sum(a.SIL_TOT) SIL_TOT \n";
				strSql += " 		From \n";
				strSql += " 			( \n";
				strSql += " 				Select \n";
				strSql += " 					A.COMP_CODE, \n";
				strSql += " 					' ' DEPT_CODE, \n";
				strSql += " 					A.CLSE_ACC_ID, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					A.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN, \n";
				strSql += " 					Sum(Case When To_Char(b.BUDG_YM,'YYYYMM') =  ?  ||  ?  Then B.BUDG_MONTH_ASSIGN_AMT Else 0 End ) BUDG_AMT, \n";
				strSql += " 					Sum(B.BUDG_MONTH_ASSIGN_AMT) BUDG_TOT, \n";
				strSql += " 					0 SIL_AMT, \n";
				strSql += " 					0 SIL_TOT \n";
				strSql += " 				From	T_BUDG_DEPT_ITEM A, \n";
				strSql += " 						T_BUDG_MONTH_AMT B, \n";
				strSql += " 						( \n";
				strSql += " 							Select  \n";
				strSql += " 								c.BUDG_CODE_NO , \n";
				strSql += " 								c.CRTUSERNO , \n";
				strSql += " 								c.CRTDATE , \n";
				strSql += " 								c.MODUSERNO , \n";
				strSql += " 								c.MODDATE , \n";
				strSql += " 								c.P_BUDG_CODE_NO , \n";
				strSql += " 								c.LEVEL_SEQ , \n";
				strSql += " 								c.LEGACY_BUDG_CODE , \n";
				strSql += " 								c.BUDG_CODE_NAME , \n";
				strSql += " 								c.ACC_CODE , \n";
				strSql += " 								c.USE_CLS , \n";
				strSql += " 								c.CONTROL_LEVEL_TAG , \n";
				strSql += " 								c.BUDG_ITEM_CODE , \n";
				strSql += " 								c.MAKE_DEPT , \n";
				strSql += " 								c.ASSIGN_TAG , \n";
				strSql += " 								c.COMP_CODE, \n";
				strSql += " 								RowNum Rn \n";
				strSql += " 							From T_BUDG_CODE C \n";
				strSql += " 							Start With \n";
				strSql += " 									COMP_CODE =  ?  \n";
				strSql += " 							And		Not Exists \n";
				strSql += " 									( \n";
				strSql += " 										Select \n";
				strSql += " 											Null \n";
				strSql += " 										From	t_budg_code x \n";
				strSql += " 										Where	x.COMP_CODE = c.COMP_CODE \n";
				strSql += " 										And		x.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 									) \n";
				strSql += " 							Connect By \n";
				strSql += " 								Prior	c.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 							Order Siblings By \n";
				strSql += " 								c.LEVEL_SEQ \n";
				strSql += " 						) C, \n";
				strSql += " 						T_BUDG_DEPT_MAP d \n";
				strSql += " 				Where	A.COMP_CODE 	 = B.COMP_CODE \n";
				strSql += " 				And		A.CLSE_ACC_ID  = B.CLSE_ACC_ID \n";
				strSql += " 				And		A.DEPT_CODE 	 = B.DEPT_CODE \n";
				strSql += " 				And		A.BUDG_CODE_NO = B.BUDG_CODE_NO \n";
				strSql += " 				And		A.RESERVED_SEQ = B.RESERVED_SEQ \n";
				strSql += " 				And		A.BUDG_CODE_NO = C.BUDG_CODE_NO \n";
				strSql += " 				And		A.COMP_CODE =  ?  \n";
				strSql += " 				And		a.CLSE_ACC_ID =  ?  \n";
				strSql += " 				And		a.DEPT_CODE = d.DEPT_CODE \n";
				strSql += " 				And		b.BUDG_YM <= Last_Day(To_Date( ? || ? ||'01','YYYYMMDD')) \n";
				strSql += " 				Group by \n";
				strSql += " 					A.COMP_CODE, \n";
				strSql += " 					A.CLSE_ACC_ID, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					A.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN \n";
				strSql += " 				Union All \n";
				strSql += " 				Select \n";
				strSql += " 					b.COMP_CODE, \n";
				strSql += " 					' ' DEPT_CODE, \n";
				strSql += " 					 ?   CLSE_ACC_ID, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN, \n";
				strSql += " 					0 BUDG_AMT, \n";
				strSql += " 					0 BUDG_TOT, \n";
				strSql += " 					Sum(Case When To_Char(b.MAKE_DT,'YYYYMM') =  ?  ||  ?  Then nvl(b.DB_AMT,0) + nvl(b.CR_AMT,0) Else 0 End ) SIL_AMT, \n";
				strSql += " 					SUM(nvl(b.DB_AMT,0) + nvl(b.CR_AMT,0)) SIL_TOT \n";
				strSql += " 				From	T_ACC_SLIP_BODY1 b, \n";
				strSql += " 						( \n";
				strSql += " 							Select  \n";
				strSql += " 								c.BUDG_CODE_NO , \n";
				strSql += " 								c.CRTUSERNO , \n";
				strSql += " 								c.CRTDATE , \n";
				strSql += " 								c.MODUSERNO , \n";
				strSql += " 								c.MODDATE , \n";
				strSql += " 								c.P_BUDG_CODE_NO , \n";
				strSql += " 								c.LEVEL_SEQ , \n";
				strSql += " 								c.LEGACY_BUDG_CODE , \n";
				strSql += " 								c.BUDG_CODE_NAME , \n";
				strSql += " 								c.ACC_CODE , \n";
				strSql += " 								c.USE_CLS , \n";
				strSql += " 								c.CONTROL_LEVEL_TAG , \n";
				strSql += " 								c.BUDG_ITEM_CODE , \n";
				strSql += " 								c.MAKE_DEPT , \n";
				strSql += " 								c.ASSIGN_TAG , \n";
				strSql += " 								c.COMP_CODE, \n";
				strSql += " 								RowNum Rn \n";
				strSql += " 							From T_BUDG_CODE C \n";
				strSql += " 							Start With \n";
				strSql += " 									COMP_CODE =  ?  \n";
				strSql += " 							And		Not Exists \n";
				strSql += " 									( \n";
				strSql += " 										Select \n";
				strSql += " 											Null \n";
				strSql += " 										From	t_budg_code x \n";
				strSql += " 										Where	x.COMP_CODE = c.COMP_CODE \n";
				strSql += " 										And		x.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 									) \n";
				strSql += " 							Connect By \n";
				strSql += " 								Prior	c.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 							Order Siblings By \n";
				strSql += " 								c.LEVEL_SEQ \n";
				strSql += " 						) C, \n";
				strSql += " 						T_BUDG_DEPT_MAP d \n";
				strSql += " 				Where	b.KEEP_DT is not null \n";
				strSql += " 				And		b.TRANSFER_TAG = 'F' \n";
				strSql += " 				And		b.MAKE_DT Between To_Date(  ?  ||'-01-01','YYYY-MM-DD') And Last_Day(To_Date( ? || ? ||'01','YYYYMMDD')) \n";
				strSql += " 				And		b.COMP_CODE =  ?  \n";
				strSql += " 				And		b.ACC_CODE  = c.ACC_CODE \n";
				strSql += " 				And		b.COMP_CODE = c.COMP_CODE \n";
				strSql += " 				And		b.DEPT_CODE = d.DEPT_CODE \n";
				strSql += " 				Group By \n";
				strSql += " 					b.COMP_CODE, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN \n";
				strSql += " 			) a, \n";
				strSql += " 			( \n";
				strSql += " 				Select  \n";
				strSql += " 					c.BUDG_CODE_NO , \n";
				strSql += " 					c.CRTUSERNO , \n";
				strSql += " 					c.CRTDATE , \n";
				strSql += " 					c.MODUSERNO , \n";
				strSql += " 					c.MODDATE , \n";
				strSql += " 					c.P_BUDG_CODE_NO , \n";
				strSql += " 					c.LEVEL_SEQ , \n";
				strSql += " 					c.LEGACY_BUDG_CODE , \n";
				strSql += " 					c.BUDG_CODE_NAME , \n";
				strSql += " 					c.ACC_CODE , \n";
				strSql += " 					c.USE_CLS , \n";
				strSql += " 					c.CONTROL_LEVEL_TAG , \n";
				strSql += " 					c.BUDG_ITEM_CODE , \n";
				strSql += " 					c.MAKE_DEPT , \n";
				strSql += " 					c.ASSIGN_TAG , \n";
				strSql += " 					c.COMP_CODE, \n";
				strSql += " 					RowNum Rn \n";
				strSql += " 				From T_BUDG_CODE C \n";
				strSql += " 				Start With \n";
				strSql += " 						COMP_CODE =  ?  \n";
				strSql += " 				And		Not Exists \n";
				strSql += " 						( \n";
				strSql += " 							Select \n";
				strSql += " 								Null \n";
				strSql += " 							From	t_budg_code x \n";
				strSql += " 							Where	x.COMP_CODE = c.COMP_CODE \n";
				strSql += " 							And		x.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 						) \n";
				strSql += " 				Connect By \n";
				strSql += " 					Prior	c.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 				Order Siblings By \n";
				strSql += " 					c.LEVEL_SEQ \n";
				strSql += " 			) b, \n";
				strSql += " 			T_DEPT_CODE_ORG c \n";
				strSql += " 		Where	a.P_BUDG_CODE_NO = b.BUDG_CODE_NO (+) \n";
				strSql += " 		And		a.DEPT_CODE = c.DEPT_CODE (+) \n";
				strSql += " 		Group By Grouping Sets \n";
				strSql += " 		( \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				a.DEPT_CODE, \n";
				strSql += " 				a.CLSE_ACC_ID, \n";
				strSql += " 				a.P_BUDG_CODE_NO, \n";
				strSql += " 				a.BUDG_CODE_NO, \n";
				strSql += " 				a.BUDG_CODE_NAME, \n";
				strSql += " 				b.RN, \n";
				strSql += " 				a.RN, \n";
				strSql += " 				c.DEPT_NAME, \n";
				strSql += " 				b.BUDG_CODE_NAME \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				a.DEPT_CODE, \n";
				strSql += " 				a.CLSE_ACC_ID, \n";
				strSql += " 				a.P_BUDG_CODE_NO, \n";
				strSql += " 				b.RN, \n";
				strSql += " 				c.DEPT_NAME, \n";
				strSql += " 				b.BUDG_CODE_NAME \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				a.DEPT_CODE, \n";
				strSql += " 				a.CLSE_ACC_ID, \n";
				strSql += " 				c.DEPT_NAME \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 			) \n";
				strSql += " 		) \n";
				strSql += " 	) \n";
				strSql += " Where	GrTot <> 1 \n";
				strSql += " Order By \n";
				strSql += " 	DEPT_CODE, \n";
				strSql += " 	P_RN, \n";
				strSql += " 	RN \n";
				strSql += "  ";
				
				lrArgData.addColumn("1CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("2MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("3COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("4COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("5CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("6CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("7MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("8CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("9CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("10MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("11COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("12CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("13CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("14MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("15COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("16COMP_CODE", CITData.VARCHAR2);
				lrArgData.addRow();
				lrArgData.setValue("1CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("2MONTH", strMONTH);
				lrArgData.setValue("3COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("4COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("5CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("6CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("7MONTH", strMONTH);
				lrArgData.setValue("8CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("9CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("10MONTH", strMONTH);
				lrArgData.setValue("11COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("12CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("13CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("14MONTH", strMONTH);
				lrArgData.setValue("15COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("16COMP_CODE", strCOMP_CODE);
			}
			else if(strDEPT_FLAG.equals("CHK_DEPT"))
			{
				strSql  = " Select \n";
				strSql += " 	COMP_CODE, \n";
				strSql += " 	DEPT_CODE CHK_DEPT_CODE, \n";
				strSql += " 	CLSE_ACC_ID, \n";
				strSql += " 	P_BUDG_CODE_NO, \n";
				strSql += " 	BUDG_CODE_NO, \n";
				strSql += " 	BUDG_CODE_NAME acc_name, \n";
				strSql += " 	P_RN, \n";
				strSql += " 	RN, \n";
				strSql += " 	GrTot, \n";
				strSql += " 	P_BUDG_CODE_NAME p_acc_name, \n";
				strSql += " 	DEPT_NAME CHK_DEPT_NAME, \n";
				strSql += " 	BUDG_AMT first_budg_amt, \n";
				strSql += " 	BUDG_TOT first_budg_amt_sum_sum, \n";
				strSql += " 	SIL_AMT sil_amt, \n";
				strSql += " 	SIL_TOT sil_amt_sum, \n";
				strSql += " 	Nvl(BUDG_AMT,0) - Nvl(SIL_AMT,0) sub_budg_amt, \n";
				strSql += " 	Nvl(BUDG_TOT,0) - Nvl(SIL_TOT,0) sub_budg_amt_sum \n";
				strSql += " From \n";
				strSql += " 	( \n";
				strSql += " 		Select \n";
				strSql += " 			a.COMP_CODE, \n";
				strSql += " 			a.DEPT_CODE, \n";
				strSql += " 			a.CLSE_ACC_ID, \n";
				strSql += " 			a.P_BUDG_CODE_NO, \n";
				strSql += " 			a.BUDG_CODE_NO, \n";
				strSql += " 			a.BUDG_CODE_NAME, \n";
				strSql += " 			b.RN P_RN, \n";
				strSql += " 			a.RN, \n";
				strSql += " 			Grouping(a.DEPT_CODE) GrTot, \n";
				strSql += " 			Case When Grouping(b.RN) = 1 Then ' ' When Grouping(a.RN) = 1 Then b.BUDG_CODE_NAME ||' 계' Else b.BUDG_CODE_NAME End P_BUDG_CODE_NAME, \n";
				strSql += " 			Case When Grouping(b.RN) = 1 Then c.DEPT_NAME ||' 계' Else c.DEPT_NAME End DEPT_NAME, \n";
				strSql += " 			Sum(a.BUDG_AMT) BUDG_AMT, \n";
				strSql += " 			Sum(a.BUDG_TOT) BUDG_TOT, \n";
				strSql += " 			Sum(a.SIL_AMT) SIL_AMT, \n";
				strSql += " 			Sum(a.SIL_TOT) SIL_TOT \n";
				strSql += " 		From \n";
				strSql += " 			( \n";
				strSql += " 				Select \n";
				strSql += " 					A.COMP_CODE, \n";
				strSql += " 					d.CHK_DEPT_CODE DEPT_CODE, \n";
				strSql += " 					A.CLSE_ACC_ID, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					A.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN, \n";
				strSql += " 					Sum(Case When To_Char(b.BUDG_YM,'YYYYMM') =  ?  ||  ?  Then B.BUDG_MONTH_ASSIGN_AMT Else 0 End ) BUDG_AMT, \n";
				strSql += " 					Sum(B.BUDG_MONTH_ASSIGN_AMT) BUDG_TOT, \n";
				strSql += " 					0 SIL_AMT, \n";
				strSql += " 					0 SIL_TOT \n";
				strSql += " 				From	T_BUDG_DEPT_ITEM A, \n";
				strSql += " 						T_BUDG_MONTH_AMT B, \n";
				strSql += " 						( \n";
				strSql += " 							Select  \n";
				strSql += " 								c.BUDG_CODE_NO , \n";
				strSql += " 								c.CRTUSERNO , \n";
				strSql += " 								c.CRTDATE , \n";
				strSql += " 								c.MODUSERNO , \n";
				strSql += " 								c.MODDATE , \n";
				strSql += " 								c.P_BUDG_CODE_NO , \n";
				strSql += " 								c.LEVEL_SEQ , \n";
				strSql += " 								c.LEGACY_BUDG_CODE , \n";
				strSql += " 								c.BUDG_CODE_NAME , \n";
				strSql += " 								c.ACC_CODE , \n";
				strSql += " 								c.USE_CLS , \n";
				strSql += " 								c.CONTROL_LEVEL_TAG , \n";
				strSql += " 								c.BUDG_ITEM_CODE , \n";
				strSql += " 								c.MAKE_DEPT , \n";
				strSql += " 								c.ASSIGN_TAG , \n";
				strSql += " 								c.COMP_CODE, \n";
				strSql += " 								RowNum Rn \n";
				strSql += " 							From T_BUDG_CODE C \n";
				strSql += " 							Start With \n";
				strSql += " 									COMP_CODE =  ?  \n";
				strSql += " 							And		Not Exists \n";
				strSql += " 									( \n";
				strSql += " 										Select \n";
				strSql += " 											Null \n";
				strSql += " 										From	t_budg_code x \n";
				strSql += " 										Where	x.COMP_CODE = c.COMP_CODE \n";
				strSql += " 										And		x.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 									) \n";
				strSql += " 							Connect By \n";
				strSql += " 								Prior	c.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 							Order Siblings By \n";
				strSql += " 								c.LEVEL_SEQ \n";
				strSql += " 						) C, \n";
				strSql += " 						T_BUDG_DEPT_MAP d \n";
				strSql += " 				Where	A.COMP_CODE 	 = B.COMP_CODE \n";
				strSql += " 				And		A.CLSE_ACC_ID  = B.CLSE_ACC_ID \n";
				strSql += " 				And		A.DEPT_CODE 	 = B.DEPT_CODE \n";
				strSql += " 				And		A.BUDG_CODE_NO = B.BUDG_CODE_NO \n";
				strSql += " 				And		A.RESERVED_SEQ = B.RESERVED_SEQ \n";
				strSql += " 				And		A.BUDG_CODE_NO = C.BUDG_CODE_NO \n";
				strSql += " 				And		A.COMP_CODE =  ?   \n";
				strSql += " 				And		a.CLSE_ACC_ID =   ?  \n";
				strSql += " 				And		a.DEPT_CODE = d.DEPT_CODE \n";
				strSql += " 				And		d.CHK_DEPT_CODE like  ?  || '%' \n";
				strSql += " 				And		b.BUDG_YM <= Last_Day(To_Date( ? || ? ||'01','YYYYMMDD')) \n";
				strSql += " 				Group by \n";
				strSql += " 					A.COMP_CODE, \n";
				strSql += " 					d.CHK_DEPT_CODE, \n";
				strSql += " 					A.CLSE_ACC_ID, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					A.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN \n";
				strSql += " 				Union All \n";
				strSql += " 				Select \n";
				strSql += " 					b.COMP_CODE, \n";
				strSql += " 					d.CHK_DEPT_CODE DEPT_CODE, \n";
				strSql += " 					 ?   CLSE_ACC_ID, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN, \n";
				strSql += " 					0 BUDG_AMT, \n";
				strSql += " 					0 BUDG_TOT, \n";
				strSql += " 					Sum(Case When To_Char(b.MAKE_DT,'YYYYMM') =  ?  ||  ?  Then nvl(b.DB_AMT,0) + nvl(b.CR_AMT,0) Else 0 End ) SIL_AMT, \n";
				strSql += " 					SUM(nvl(b.DB_AMT,0) + nvl(b.CR_AMT,0)) SIL_TOT \n";
				strSql += " 				From	T_ACC_SLIP_BODY1 b, \n";
				strSql += " 						( \n";
				strSql += " 							Select  \n";
				strSql += " 								c.BUDG_CODE_NO , \n";
				strSql += " 								c.CRTUSERNO , \n";
				strSql += " 								c.CRTDATE , \n";
				strSql += " 								c.MODUSERNO , \n";
				strSql += " 								c.MODDATE , \n";
				strSql += " 								c.P_BUDG_CODE_NO , \n";
				strSql += " 								c.LEVEL_SEQ , \n";
				strSql += " 								c.LEGACY_BUDG_CODE , \n";
				strSql += " 								c.BUDG_CODE_NAME , \n";
				strSql += " 								c.ACC_CODE , \n";
				strSql += " 								c.USE_CLS , \n";
				strSql += " 								c.CONTROL_LEVEL_TAG , \n";
				strSql += " 								c.BUDG_ITEM_CODE , \n";
				strSql += " 								c.MAKE_DEPT , \n";
				strSql += " 								c.ASSIGN_TAG , \n";
				strSql += " 								c.COMP_CODE, \n";
				strSql += " 								RowNum Rn \n";
				strSql += " 							From T_BUDG_CODE C \n";
				strSql += " 							Start With \n";
				strSql += " 									COMP_CODE =  ?   \n";
				strSql += " 							And		Not Exists \n";
				strSql += " 									( \n";
				strSql += " 										Select \n";
				strSql += " 											Null \n";
				strSql += " 										From	t_budg_code x \n";
				strSql += " 										Where	x.COMP_CODE = c.COMP_CODE \n";
				strSql += " 										And		x.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 									) \n";
				strSql += " 							Connect By \n";
				strSql += " 								Prior	c.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 							Order Siblings By \n";
				strSql += " 								c.LEVEL_SEQ \n";
				strSql += " 						) C, \n";
				strSql += " 						T_BUDG_DEPT_MAP d \n";
				strSql += " 				Where	b.KEEP_DT is not null \n";
				strSql += " 				And		b.TRANSFER_TAG = 'F' \n";
				strSql += " 				And		b.MAKE_DT Between To_Date(  ?  ||'-01-01','YYYY-MM-DD') And Last_Day(To_Date( ? || ? ||'01','YYYYMMDD')) \n";
				strSql += " 				And		b.COMP_CODE =  ?  \n";
				strSql += " 				And		b.ACC_CODE  = c.ACC_CODE \n";
				strSql += " 				And		b.COMP_CODE = c.COMP_CODE \n";
				strSql += " 				And		b.DEPT_CODE = d.DEPT_CODE \n";
				strSql += " 				And		d.CHK_DEPT_CODE like  ?  ||'%' \n";
				strSql += " 				Group By \n";
				strSql += " 					b.COMP_CODE, \n";
				strSql += " 					d.CHK_DEPT_CODE, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN \n";
				strSql += " 			) a, \n";
				strSql += " 			( \n";
				strSql += " 				Select  \n";
				strSql += " 					c.BUDG_CODE_NO , \n";
				strSql += " 					c.CRTUSERNO , \n";
				strSql += " 					c.CRTDATE , \n";
				strSql += " 					c.MODUSERNO , \n";
				strSql += " 					c.MODDATE , \n";
				strSql += " 					c.P_BUDG_CODE_NO , \n";
				strSql += " 					c.LEVEL_SEQ , \n";
				strSql += " 					c.LEGACY_BUDG_CODE , \n";
				strSql += " 					c.BUDG_CODE_NAME , \n";
				strSql += " 					c.ACC_CODE , \n";
				strSql += " 					c.USE_CLS , \n";
				strSql += " 					c.CONTROL_LEVEL_TAG , \n";
				strSql += " 					c.BUDG_ITEM_CODE , \n";
				strSql += " 					c.MAKE_DEPT , \n";
				strSql += " 					c.ASSIGN_TAG , \n";
				strSql += " 					c.COMP_CODE, \n";
				strSql += " 					RowNum Rn \n";
				strSql += " 				From T_BUDG_CODE C \n";
				strSql += " 				Start With \n";
				strSql += " 						COMP_CODE =  ?  \n";
				strSql += " 				And		Not Exists \n";
				strSql += " 						( \n";
				strSql += " 							Select \n";
				strSql += " 								Null \n";
				strSql += " 							From	t_budg_code x \n";
				strSql += " 							Where	x.COMP_CODE = c.COMP_CODE \n";
				strSql += " 							And		x.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 						) \n";
				strSql += " 				Connect By \n";
				strSql += " 					Prior	c.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 				Order Siblings By \n";
				strSql += " 					c.LEVEL_SEQ \n";
				strSql += " 			) b, \n";
				strSql += " 			T_DEPT_CODE_ORG c \n";
				strSql += " 		Where	a.P_BUDG_CODE_NO = b.BUDG_CODE_NO (+) \n";
				strSql += " 		And		a.DEPT_CODE = c.DEPT_CODE (+) \n";
				strSql += " 		Group By Grouping Sets \n";
				strSql += " 		( \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				a.DEPT_CODE, \n";
				strSql += " 				a.CLSE_ACC_ID, \n";
				strSql += " 				a.P_BUDG_CODE_NO, \n";
				strSql += " 				a.BUDG_CODE_NO, \n";
				strSql += " 				a.BUDG_CODE_NAME, \n";
				strSql += " 				b.RN, \n";
				strSql += " 				a.RN, \n";
				strSql += " 				c.DEPT_NAME, \n";
				strSql += " 				b.BUDG_CODE_NAME \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				a.DEPT_CODE, \n";
				strSql += " 				a.CLSE_ACC_ID, \n";
				strSql += " 				a.P_BUDG_CODE_NO, \n";
				strSql += " 				b.RN, \n";
				strSql += " 				c.DEPT_NAME, \n";
				strSql += " 				b.BUDG_CODE_NAME \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				a.DEPT_CODE, \n";
				strSql += " 				a.CLSE_ACC_ID, \n";
				strSql += " 				c.DEPT_NAME \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 			) \n";
				strSql += " 		) \n";
				strSql += " 	) \n";
				strSql += " Order By \n";
				strSql += " 	DEPT_CODE, \n";
				strSql += " 	P_RN, \n";
				strSql += " 	RN \n";
				strSql += "  ";
				
				lrArgData.addColumn("1CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("2MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("3COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("4COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("5CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("6DEPT_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("7CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("8MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("9CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("10CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("11MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("12COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("13CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("14CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("15MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("16COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("17DEPT_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("18COMP_CODE", CITData.VARCHAR2);
				lrArgData.addRow();
				lrArgData.setValue("1CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("2MONTH", strMONTH);
				lrArgData.setValue("3COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("4COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("5CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("6DEPT_CODE", strDEPT_CODE);
				lrArgData.setValue("7CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("8MONTH", strMONTH);
				lrArgData.setValue("9CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("10CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("11MONTH", strMONTH);
				lrArgData.setValue("12COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("13CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("14CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("15MONTH", strMONTH);
				lrArgData.setValue("16COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("17DEPT_CODE", strDEPT_CODE);
				lrArgData.setValue("18COMP_CODE", strCOMP_CODE);
			}
			else if(strDEPT_FLAG.equals("DEPT"))
			{
				strSql  = " Select \n";
				strSql += " 	COMP_CODE, \n";
				strSql += " 	CHK_DEPT_CODE, \n";
				strSql += " 	CHK_DEPT_NAME, \n";
				strSql += " 	DEPT_CODE, \n";
				strSql += " 	DEPT_NAME, \n";
				strSql += " 	CLSE_ACC_ID, \n";
				strSql += " 	P_BUDG_CODE_NO, \n";
				strSql += " 	BUDG_CODE_NO, \n";
				strSql += " 	BUDG_CODE_NAME acc_name, \n";
				strSql += " 	P_RN, \n";
				strSql += " 	RN, \n";
				strSql += " 	GrTot, \n";
				strSql += " 	P_BUDG_CODE_NAME p_acc_name, \n";
				strSql += " 	BUDG_AMT first_budg_amt, \n";
				strSql += " 	BUDG_TOT first_budg_amt_sum_sum, \n";
				strSql += " 	SIL_AMT sil_amt, \n";
				strSql += " 	SIL_TOT sil_amt_sum, \n";
				strSql += " 	Nvl(BUDG_AMT,0) - Nvl(SIL_AMT,0) sub_budg_amt, \n";
				strSql += " 	Nvl(BUDG_TOT,0) - Nvl(SIL_TOT,0) sub_budg_amt_sum \n";
				strSql += " From \n";
				strSql += " 	( \n";
				strSql += " 		Select \n";
				strSql += " 			a.COMP_CODE, \n";
				strSql += " 			a.DEPT_CODE, \n";
				strSql += " 			a.CLSE_ACC_ID, \n";
				strSql += " 			a.P_BUDG_CODE_NO, \n";
				strSql += " 			a.BUDG_CODE_NO, \n";
				strSql += " 			a.BUDG_CODE_NAME, \n";
				strSql += " 			d.CHK_DEPT_CODE, \n";
				strSql += " 			b.RN P_RN, \n";
				strSql += " 			a.RN, \n";
				strSql += " 			Grouping(d.CHK_DEPT_CODE) GrTot, \n";
				strSql += " 			Case When Grouping(d.CHK_DEPT_CODE) = 1 Then '총  계' When Grouping(a.DEPT_CODE) = 1 Then e.DEPT_NAME||' 계' Else e.DEPT_NAME End CHK_DEPT_NAME, \n";
				strSql += " 			Case When Grouping(b.RN) = 1 Then ' ' When Grouping(a.RN) = 1 Then b.BUDG_CODE_NAME ||' 계' Else b.BUDG_CODE_NAME End P_BUDG_CODE_NAME, \n";
				strSql += " 			Case When Grouping(a.DEPT_CODE) = 1 Then ' ' When Grouping(b.RN) = 1 Then c.DEPT_NAME ||' 계' Else c.DEPT_NAME End DEPT_NAME, \n";
				strSql += " 			Sum(a.BUDG_AMT) BUDG_AMT, \n";
				strSql += " 			Sum(a.BUDG_TOT) BUDG_TOT, \n";
				strSql += " 			Sum(a.SIL_AMT) SIL_AMT, \n";
				strSql += " 			Sum(a.SIL_TOT) SIL_TOT \n";
				strSql += " 		From \n";
				strSql += " 			( \n";
				strSql += " 				Select \n";
				strSql += " 					A.COMP_CODE, \n";
				strSql += " 					A.DEPT_CODE DEPT_CODE, \n";
				strSql += " 					A.CLSE_ACC_ID, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					A.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN, \n";
				strSql += " 					Sum(Case When To_Char(b.BUDG_YM,'YYYYMM') =  ?  ||  ?  Then B.BUDG_MONTH_ASSIGN_AMT Else 0 End ) BUDG_AMT, \n";
				strSql += " 					Sum(B.BUDG_MONTH_ASSIGN_AMT) BUDG_TOT, \n";
				strSql += " 					0 SIL_AMT, \n";
				strSql += " 					0 SIL_TOT \n";
				strSql += " 				From	T_BUDG_DEPT_ITEM A, \n";
				strSql += " 						T_BUDG_MONTH_AMT B, \n";
				strSql += " 						( \n";
				strSql += " 							Select  \n";
				strSql += " 								c.BUDG_CODE_NO , \n";
				strSql += " 								c.CRTUSERNO , \n";
				strSql += " 								c.CRTDATE , \n";
				strSql += " 								c.MODUSERNO , \n";
				strSql += " 								c.MODDATE , \n";
				strSql += " 								c.P_BUDG_CODE_NO , \n";
				strSql += " 								c.LEVEL_SEQ , \n";
				strSql += " 								c.LEGACY_BUDG_CODE , \n";
				strSql += " 								c.BUDG_CODE_NAME , \n";
				strSql += " 								c.ACC_CODE , \n";
				strSql += " 								c.USE_CLS , \n";
				strSql += " 								c.CONTROL_LEVEL_TAG , \n";
				strSql += " 								c.BUDG_ITEM_CODE , \n";
				strSql += " 								c.MAKE_DEPT , \n";
				strSql += " 								c.ASSIGN_TAG , \n";
				strSql += " 								c.COMP_CODE, \n";
				strSql += " 								RowNum Rn \n";
				strSql += " 							From T_BUDG_CODE C \n";
				strSql += " 							Start With \n";
				strSql += " 									COMP_CODE =  ?  \n";
				strSql += " 							And		Not Exists \n";
				strSql += " 									( \n";
				strSql += " 										Select \n";
				strSql += " 											Null \n";
				strSql += " 										From	t_budg_code x \n";
				strSql += " 										Where	x.COMP_CODE = c.COMP_CODE \n";
				strSql += " 										And		x.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 									) \n";
				strSql += " 							Connect By \n";
				strSql += " 								Prior	c.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 							Order Siblings By \n";
				strSql += " 								c.LEVEL_SEQ \n";
				strSql += " 						) C \n";
				strSql += " 				Where	A.COMP_CODE 	 = B.COMP_CODE \n";
				strSql += " 				And		A.CLSE_ACC_ID  = B.CLSE_ACC_ID \n";
				strSql += " 				And		A.DEPT_CODE 	 = B.DEPT_CODE \n";
				strSql += " 				And		A.BUDG_CODE_NO = B.BUDG_CODE_NO \n";
				strSql += " 				And		A.RESERVED_SEQ = B.RESERVED_SEQ \n";
				strSql += " 				And		A.BUDG_CODE_NO = C.BUDG_CODE_NO \n";
				strSql += " 				And		A.COMP_CODE =  ?  \n";
				strSql += " 				And		a.CLSE_ACC_ID =  ?  \n";
				strSql += " 				And		a.DEPT_CODE like  ?   || '%' \n";
				strSql += " 				And		b.BUDG_YM <= Last_Day(To_Date( ? || ? ||'01','YYYYMMDD')) \n";
				strSql += " 				Group by \n";
				strSql += " 					A.COMP_CODE, \n";
				strSql += " 					a.DEPT_CODE, \n";
				strSql += " 					A.CLSE_ACC_ID, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					A.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN \n";
				strSql += " 				Union All \n";
				strSql += " 				Select \n";
				strSql += " 					b.COMP_CODE, \n";
				strSql += " 					b.DEPT_CODE DEPT_CODE, \n";
				strSql += " 					 ?  CLSE_ACC_ID, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN, \n";
				strSql += " 					0 BUDG_AMT, \n";
				strSql += " 					0 BUDG_TOT, \n";
				strSql += " 					Sum(Case When To_Char(b.MAKE_DT,'YYYYMM') =  ?  ||  ?  Then nvl(b.DB_AMT,0) + nvl(b.CR_AMT,0) Else 0 End ) SIL_AMT, \n";
				strSql += " 					SUM(nvl(b.DB_AMT,0) + nvl(b.CR_AMT,0)) SIL_TOT \n";
				strSql += " 				From	T_ACC_SLIP_BODY1 b, \n";
				strSql += " 						( \n";
				strSql += " 							Select  \n";
				strSql += " 								c.BUDG_CODE_NO , \n";
				strSql += " 								c.CRTUSERNO , \n";
				strSql += " 								c.CRTDATE , \n";
				strSql += " 								c.MODUSERNO , \n";
				strSql += " 								c.MODDATE , \n";
				strSql += " 								c.P_BUDG_CODE_NO , \n";
				strSql += " 								c.LEVEL_SEQ , \n";
				strSql += " 								c.LEGACY_BUDG_CODE , \n";
				strSql += " 								c.BUDG_CODE_NAME , \n";
				strSql += " 								c.ACC_CODE , \n";
				strSql += " 								c.USE_CLS , \n";
				strSql += " 								c.CONTROL_LEVEL_TAG , \n";
				strSql += " 								c.BUDG_ITEM_CODE , \n";
				strSql += " 								c.MAKE_DEPT , \n";
				strSql += " 								c.ASSIGN_TAG , \n";
				strSql += " 								c.COMP_CODE, \n";
				strSql += " 								RowNum Rn \n";
				strSql += " 							From T_BUDG_CODE C \n";
				strSql += " 							Start With \n";
				strSql += " 									COMP_CODE =  ?  \n";
				strSql += " 							And		Not Exists \n";
				strSql += " 									( \n";
				strSql += " 										Select \n";
				strSql += " 											Null \n";
				strSql += " 										From	t_budg_code x \n";
				strSql += " 										Where	x.COMP_CODE = c.COMP_CODE \n";
				strSql += " 										And		x.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 									) \n";
				strSql += " 							Connect By \n";
				strSql += " 								Prior	c.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 							Order Siblings By \n";
				strSql += " 								c.LEVEL_SEQ \n";
				strSql += " 						) C \n";
				strSql += " 				Where	b.KEEP_DT is not null \n";
				strSql += " 				And		b.TRANSFER_TAG = 'F' \n";
				strSql += " 				And		b.MAKE_DT Between To_Date(  ?  ||'-01-01','YYYY-MM-DD') And Last_Day(To_Date( ? || ? ||'01','YYYYMMDD')) \n";
				strSql += " 				And		b.COMP_CODE =  ?  \n";
				strSql += " 				And		b.ACC_CODE  = c.ACC_CODE \n";
				strSql += " 				And		b.COMP_CODE = c.COMP_CODE \n";
				strSql += " 				And		b.DEPT_CODE like  ?  || '%' \n";
				strSql += " 				Group By \n";
				strSql += " 					b.COMP_CODE, \n";
				strSql += " 					b.DEPT_CODE, \n";
				strSql += " 					C.P_BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NO, \n";
				strSql += " 					C.BUDG_CODE_NAME, \n";
				strSql += " 					C.RN \n";
				strSql += " 			) a, \n";
				strSql += " 			( \n";
				strSql += " 				Select  \n";
				strSql += " 					c.BUDG_CODE_NO , \n";
				strSql += " 					c.CRTUSERNO , \n";
				strSql += " 					c.CRTDATE , \n";
				strSql += " 					c.MODUSERNO , \n";
				strSql += " 					c.MODDATE , \n";
				strSql += " 					c.P_BUDG_CODE_NO , \n";
				strSql += " 					c.LEVEL_SEQ , \n";
				strSql += " 					c.LEGACY_BUDG_CODE , \n";
				strSql += " 					c.BUDG_CODE_NAME , \n";
				strSql += " 					c.ACC_CODE , \n";
				strSql += " 					c.USE_CLS , \n";
				strSql += " 					c.CONTROL_LEVEL_TAG , \n";
				strSql += " 					c.BUDG_ITEM_CODE , \n";
				strSql += " 					c.MAKE_DEPT , \n";
				strSql += " 					c.ASSIGN_TAG , \n";
				strSql += " 					c.COMP_CODE, \n";
				strSql += " 					RowNum Rn \n";
				strSql += " 				From T_BUDG_CODE C \n";
				strSql += " 				Start With \n";
				strSql += " 						COMP_CODE =  ?  \n";
				strSql += " 				And		Not Exists \n";
				strSql += " 						( \n";
				strSql += " 							Select \n";
				strSql += " 								Null \n";
				strSql += " 							From	t_budg_code x \n";
				strSql += " 							Where	x.COMP_CODE = c.COMP_CODE \n";
				strSql += " 							And		x.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 						) \n";
				strSql += " 				Connect By \n";
				strSql += " 					Prior	c.BUDG_CODE_NO = c.P_BUDG_CODE_NO \n";
				strSql += " 				Order Siblings By \n";
				strSql += " 					c.LEVEL_SEQ \n";
				strSql += " 			) b, \n";
				strSql += " 			T_DEPT_CODE_ORG c, \n";
				strSql += " 			T_BUDG_DEPT_MAP d, \n";
				strSql += " 			T_DEPT_CODE_ORG e \n";
				strSql += " 		Where	a.P_BUDG_CODE_NO = b.BUDG_CODE_NO (+) \n";
				strSql += " 		And		a.DEPT_CODE = c.DEPT_CODE (+) \n";
				strSql += " 		And		a.DEPT_CODE = d.DEPT_CODE (+) \n";
				strSql += " 		And		d.CHK_DEPT_CODE = e.DEPT_CODE (+) \n";
				strSql += " 		Group By Grouping Sets \n";
				strSql += " 		( \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				d.CHK_DEPT_CODE, \n";
				strSql += " 				e.DEPT_NAME, \n";
				strSql += " 				a.DEPT_CODE, \n";
				strSql += " 				a.CLSE_ACC_ID, \n";
				strSql += " 				a.P_BUDG_CODE_NO, \n";
				strSql += " 				a.BUDG_CODE_NO, \n";
				strSql += " 				a.BUDG_CODE_NAME, \n";
				strSql += " 				b.RN, \n";
				strSql += " 				a.RN, \n";
				strSql += " 				c.DEPT_NAME, \n";
				strSql += " 				b.BUDG_CODE_NAME \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				a.DEPT_CODE, \n";
				strSql += " 				d.CHK_DEPT_CODE, \n";
				strSql += " 				e.DEPT_NAME, \n";
				strSql += " 				a.CLSE_ACC_ID, \n";
				strSql += " 				a.P_BUDG_CODE_NO, \n";
				strSql += " 				b.RN, \n";
				strSql += " 				c.DEPT_NAME, \n";
				strSql += " 				b.BUDG_CODE_NAME \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				d.CHK_DEPT_CODE, \n";
				strSql += " 				e.DEPT_NAME, \n";
				strSql += " 				a.DEPT_CODE, \n";
				strSql += " 				a.CLSE_ACC_ID, \n";
				strSql += " 				c.DEPT_NAME \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 				a.COMP_CODE, \n";
				strSql += " 				d.CHK_DEPT_CODE, \n";
				strSql += " 				e.DEPT_NAME, \n";
				strSql += " 				a.CLSE_ACC_ID \n";
				strSql += " 			), \n";
				strSql += " 			( \n";
				strSql += " 			) \n";
				strSql += " 		) \n";
				strSql += " 	) \n";
				strSql += " Order By \n";
				strSql += " 	CHK_DEPT_CODE, \n";
				strSql += " 	DEPT_CODE, \n";
				strSql += " 	P_RN, \n";
				strSql += " 	RN \n";
				strSql += "  ";
				
				lrArgData.addColumn("1CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("2MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("3COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("4COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("5CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("6DEPT_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("7CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("8MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("9CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("10CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("11MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("12COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("13CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("14CLSE_ACC_ID", CITData.VARCHAR2);
				lrArgData.addColumn("15MONTH", CITData.VARCHAR2);
				lrArgData.addColumn("16COMP_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("17DEPT_CODE", CITData.VARCHAR2);
				lrArgData.addColumn("18COMP_CODE", CITData.VARCHAR2);
				lrArgData.addRow();
				lrArgData.setValue("1CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("2MONTH", strMONTH);
				lrArgData.setValue("3COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("4COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("5CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("6DEPT_CODE", strDEPT_CODE);
				lrArgData.setValue("7CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("8MONTH", strMONTH);
				lrArgData.setValue("9CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("10CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("11MONTH", strMONTH);
				lrArgData.setValue("12COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("13CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("14CLSE_ACC_ID", strCLSE_ACC_ID);
				lrArgData.setValue("15MONTH", strMONTH);
				lrArgData.setValue("16COMP_CODE", strCOMP_CODE);
				lrArgData.setValue("17DEPT_CODE", strDEPT_CODE);
				lrArgData.setValue("18COMP_CODE", strCOMP_CODE);
			}
			try
			{
				lrReturnData = CITDatabase.selectQuery(strSql, lrArgData);


				lrDataset = CITCommon.toGauceDataSet(lrReturnData);
				GauceInfo.response.enableFirstRow(lrDataset);
				lrDataset.flush();
			}
			catch (Exception ex)
			{
				if (GauceInfo != null)
				{
					GauceInfo.response.writeException("USER", "900001","MAIN Select 오류-> "+ ex.getMessage());
				}
				else
				{
					throw new Exception("USER-900001:MAIN Select 오류 -> " + ex.getMessage());
				}
			}
		}
	}
	catch (Exception ex)
	{
		if (GauceInfo != null)
		{
			GauceInfo.response.writeException("SYS", "100001", "페이지 초기화 오류 -> " + ex.getMessage());
		}
		else
		{
			throw new Exception("SYS-100001:페이지 초기화 오류 -> " + ex.getMessage());
		}
	}
	finally
	{
		try
		{
			CITCommon.finalServerPage(GauceInfo);
		}
		catch (Exception ex)
		{
			if (GauceInfo != null)
			{
				GauceInfo.response.writeException("SYS", "100002", "페이지 종료 오류 -> " + ex.getMessage());
			}
			else
			{
				throw new Exception("SYS-100002:페이지 종료 오류 -> " + ex.getMessage());
			}
		}
	}
%>
