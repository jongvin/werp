음...

이거는 길게 이야기하면 무지 긴 논의점을 갖는 겁니다.

일단 몇가지 개념을 이해하셔야 합니다.

1. 프라그마의 일반적의미

대부분 컴파일러에서 프라그마란 컴파일러에게 어떤 일정한 정보를 전달하는 메커니즘(언어 확장적으로)입니다.

2. 순함수에 대하여..

순함수란 컴퓨터 언어에서 부수효과가 없이 순전히 입력인자에 의해 출력이 결정되는 함수를 의미합니다.(부수효과없이란 본래 함수 목적이외의 다른 효과가 없는 것을 말하며... 어떠한 상태도 관리되지 않는 것을 말합니다.)

3.  RESTRICT_REFERENCES  프라그마의 의미

오라클에서 SQL에 직접 사용할 사용자 정의함수는 부수효과가 없는 순 함수이기를 요구합니다.즉 부수효과가 없으며 상태관리를 하지 않는 함수만이 SQL  문에서 사용될 수 있다는 것이죠...

그리고 RESTRICT_REFERENCES  이 것을 통해 해당 함수가 순 함수임을 보장해주어야 한다는 뜻입니다.

마치 C++에서 특정 멤버 함수가 const이거나 volatile임을 알려주고 컴파일 시에 검증하고자 하는 것과 거의 같은 맥락이라고 보시면 됩니다.

4. 한가지 의문점...

오라클은 순함수개념을 WNDS,RNPS로 봅니다.

이 말은 데이타 베이스의 상태를 변경하지 않고 페키지에서는 읽을 수 없다는 의미입니다.

RNPS는 WNPS를 포함합니다.

그러나 의문점은 왜 RNDS는 아니냐는 거죠...

즉 DB상태를 읽는 것은 순함수로 본다는 거죠...상태관리를 안하는 것으로 본다는 것입니다?

왜일까요?

데이타베이스의 상태도 엄연히 상태인데요...

오라클 사용자 정의 함수에서 부수효과의 없음은...SQL이 수행될때 변경되는 상태는 없음을 말하구요...

오라클이 데이타베이스에서 읽는 것을 순함수로 보는 이유는 오라클의 데이타베이스 상태를 읽는다는 것이 SQL 시작시점의 스냅샷을 읽는 방식을 취하기 때문에 사용자 정의함수입장에서는 이미 데이타베이스 상태는 동적이지 않는 정적환경이 되므로 순함수로 가정할 수 있다는 전제가 깔려있는 것입니다.

5. 위의 전제들은 자동 트랜잭션에서는 무시됩니다.

자동트랜잭션에서는 데이타베이스의 상태에 쓰기도 가능합니다.

단 그러한 함수는 최적화의 대상이 될 수 없으며.. 부수효과도 가늠하기 힘들며... 이러한 부수효과에 대하여 명문화된 무엇인가도 없습니다.(때때로는 결과 집합의 일관성도 깨집니다.)

6. 왜 오라클은 사용자 정의함수를 이렇듯 순 함수로 제한할까요?

그 이유는 최적화 판단을 위해서라고 생각합니다.

무슨 말이냐면... 특정 사용자 정의 함수에 상수항 인자만 있다면 오라클 최적화기는 분명 해당 함수를 평가 완료후 상수형태로 원 질의에 통합할 것입니다.(그게 여러모로 빠르니까... 만약 where절에 사용자 정의 함수를 쓰는 경우를 한번 상상해 보시길...또한가지는 dbms_random.random함수를 where 절에 써보시면.. 한번만 평가됨을 알 수 있습니다.)

반면 해당 사용자 정의함수가 특정 행의 컬럼값에 의존적이면 해당 함수에 대한 평가시기는 그 함수가 의존한 인자의 표현식이 다 평가되기 까지 지연될 것입니다...

이런 등등의 결정을 하려면 해당 함수가 순 함수임을 가정하지 않으면 불가능하기 때문입니다.

