<%@ page import="com.cj.common.*, com.cj.database.*, com.cj.util.*, com.gauce.*, com.gauce.io.*, java.sql.*" errorPage="../common/Error.jsp" contentType="text/html;charset=euc-kr"%>
<%
/**************************************************************************/
/* 1. 프 로 그 램 id : 
/* 2. 유형(시나리오) : Select Page
/* 3. 기  능  정  의 : 
/* 4. 변  경  이  력 : 김흥수 작성(2005-11-21)
/* 5. 관련  프로그램 : 
/* 6. 특  기  사  항 : 
/**************************************************************************/
 
	CITGauceInfo GauceInfo = null;
	
	CITData lrReturnData = null;
	GauceDataSet lrDataset = null;

	String	strSql = "";
	String	strAct = "";
	
	try
	{
		GauceInfo = CITCommon.initServerPage(request, response, session);
		
		CITData lrArgData = new CITData();
		
		strAct = CITCommon.toKOR(request.getParameter("ACT"));
		
		if (strAct.equals("MAIN"))
		{
			String strDATE_CLS = CITCommon.toKOR(request.getParameter("DATE_CLS"));
			String strDT_F = CITCommon.toKOR(request.getParameter("DT_F"));
			String strDT_T = CITCommon.toKOR(request.getParameter("DT_T"));
			String strCOMP_CODE = CITCommon.toKOR(request.getParameter("COMP_CODE"));
			String strKEEP_CLS = CITCommon.toKOR(request.getParameter("KEEP_CLS"));
			String strMAKE_DEPT_CODE = CITCommon.toKOR(request.getParameter("MAKE_DEPT_CODE"));
			String strCHARGE_PERS = CITCommon.toKOR(request.getParameter("CHARGE_PERS"));
			String strCUST_CODE = CITCommon.toKOR(request.getParameter("CUST_CODE"));
			String strDBCR_FAMT = CITCommon.toKOR(request.getParameter("DBCR_FAMT"));
			String strDBCR_EAMT = CITCommon.toKOR(request.getParameter("DBCR_EAMT"));
			String strACC_CODE = CITCommon.toKOR(request.getParameter("ACC_CODE"));
			String strVAT_CODE = CITCommon.toKOR(request.getParameter("VAT_CODE"));
			String strDEPT_CODE = CITCommon.toKOR(request.getParameter("DEPT_CODE"));
			String strSUMMARY1 = CITCommon.toKOR(request.getParameter("SUMMARY1"));
			String strTAX_COMP_CODE = CITCommon.toKOR(request.getParameter("TAX_COMP_CODE"));
			String strAMT_CLS = CITCommon.toKOR(request.getParameter("AMT_CLS"));
			String strMAKE_PERS = CITCommon.toKOR(request.getParameter("MAKE_PERS"));
			String strEMP_CLASS_CODE = CITCommon.toKOR(request.getParameter("EMP_CLASS_CODE"));
			
			strSql  = " Select	 \n";
			strSql += " 	AA.SLIP_ID ,  \n";
			strSql += "  	AA.SLIP_IDSEQ ,  \n";
			strSql += " 	A.MAKE_COMP_CODE ,  \n";
			strSql += " 	A.MAKE_DT ,  \n";
			strSql += " 	A.MAKE_SEQ ,  \n";
			strSql += " 	A.SLIP_KIND_TAG ,  \n";
			strSql += "  	A.MAKE_SLIPNO ,  \n";
			strSql += "  	AA.MAKE_SLIPLINE , \n";
			strSql += "  	A.MAKE_SLIPNO||'-'||AA.MAKE_SLIPLINE MAKE_SLIPNOLINE, \n";
			strSql += " 	DECODE(A.KEEP_CLS, 'T', '확정  ', NULL) KEEP_CLS, \n";
			strSql += "  	AA.ACC_CODE ,  \n";
			strSql += "  	A1.ACC_NAME ,  \n";
			strSql += "  	A1.ACC_REMAIN_POSITION ,  \n";
			strSql += "  	AA.DB_AMT ,  \n";
			strSql += "  	TO_CHAR(AA.DB_AMT, 'FM9,999,999,999,999') DB_AMT_D ,  \n";
			strSql += "  	AA.CR_AMT ,  \n";
			strSql += "  	TO_CHAR(AA.CR_AMT, 'FM9,999,999,999,999') CR_AMT_D ,  \n";
			strSql += "  	--적요코드관리  \n";
			strSql += "  	A1.SUMMARY_CLS ,  \n";
			strSql += "  	AA.SUMMARY_CODE ,  \n";
			strSql += "  	AA.SUMMARY1 ,  \n";
			strSql += "  	AA.SUMMARY2 ,  \n";
			strSql += "  	AA.TAX_COMP_CODE ,  \n";
			strSql += "  	A7.COMPANY_NAME TAX_COMP_NAME,  \n";
			strSql += "  	AA.COMP_CODE ,  \n";
			strSql += "  	--귀속부서  \n";
			strSql += "  	AA.DEPT_CODE ,  \n";
			strSql += "  	A2.DEPT_NAME ,  \n";
			strSql += "  	--부문코드  \n";
			strSql += "  	AA.CLASS_CODE ,  \n";
			strSql += "  	A3.CLASS_CODE_NAME ,  \n";
			strSql += "  	--증빙코드  \n";
			strSql += "  	AA.VAT_CODE ,  \n";
			strSql += "  	A4.VAT_NAME ,  \n";
			strSql += "  	F_T_DATETOSTRING(AA.VAT_DT) VAT_DT ,  \n";
			strSql += "  	TO_CHAR(AA.SUPAMT, 'FM9,999,999,999,999') SUPAMT ,  \n";
			strSql += "  	TO_CHAR(AA.VATAMT, 'FM9,999,999,999,999') VATAMT ,  \n";
			strSql += "  	A4.RCPTBILL_CLS ,  \n";
			strSql += "  	A4.SUBTR_CLS ,  \n";
			strSql += "  	A4.SALEBUY_CLS ,  \n";
			strSql += "  	A4.VATOCCUR_CLS ,  \n";
			strSql += "  	A4.SLIP_DETAIL_LIST ,  \n";
			strSql += "  	A4.ACC_CODE VAT_ACC_CODE ,  \n";
			strSql += "  	--예산관리  \n";
			strSql += "  	A1.BUDG_MNG ,  \n";
			strSql += "  	--예산통제  \n";
			strSql += "  	A1.BUDG_EXEC_CLS ,  \n";
			strSql += "  	--거래처코드관리  \n";
			strSql += "  	A1.CUST_CODE_MNG ,  \n";
			strSql += "  	A1.CUST_CODE_MNG_TG ,  \n";
			strSql += "  	TO_CHAR(AA.CUST_SEQ) CUST_SEQ ,  \n";
			strSql += "  	F_T_CUST_MASK(A6.CUST_CODE) CUST_CODE ,  \n";
			strSql += "  	--거래처명관리  \n";
			strSql += "  	A1.CUST_NAME_MNG ,  \n";
			strSql += "  	A1.CUST_NAME_MNG_TG ,  \n";
			strSql += "  	AA.CUST_NAME ,  \n";
			strSql += "  	--은행관리  \n";
			strSql += "  	A1.BANK_MNG ,  \n";
			strSql += "  	A1.BANK_MNG_TG ,  \n";
			strSql += "  	AA.BANK_CODE ,  \n";
			strSql += "  	A5.BANK_NAME ,  \n";
			strSql += "  	--계좌관리  \n";
			strSql += "  	A1.ACCNO_MNG ,  \n";
			strSql += "  	A1.ACCNO_MNG_TG ,  \n";
			strSql += "  	AA.ACCNO ,  \n";
			strSql += "  	--잔액관리  \n";
			strSql += "  	A1.ACC_REMAIN_MNG ,  \n";
			strSql += "  	AA.RESET_SLIP_ID ,  \n";
			strSql += "  	AA.RESET_SLIP_IDSEQ ,  \n";
			strSql += "  	--카드번호  \n";
			strSql += "  	A1.CARD_SEQ_MNG ,  \n";
			strSql += "  	A1.CARD_SEQ_MNG_TG ,  \n";
			strSql += "  	--당좌수표  \n";
			strSql += "  	A1.CHK_NO_MNG ,  \n";
			strSql += "  	A1.CHK_NO_MNG_TG ,  \n";
			strSql += "  	AA.CHK_NO ,  \n";
			strSql += "  	F_T_DATETOSTRING(B1.PUBL_DT) CHK_PUBL_DT ,  \n";
			strSql += "  	--지급어음  \n";
			strSql += "  	A1.BILL_NO_MNG ,  \n";
			strSql += "  	A1.BILL_NO_MNG_TG ,  \n";
			strSql += "  	AA.BILL_NO ,  \n";
			strSql += "  	--지급어음 설정  \n";
			strSql += "  	B2.CHK_BILL_NO BILL_NO_S ,  \n";
			strSql += "  	F_T_DATETOSTRING(B2.PUBL_DT) BILL_PUBL_DT ,  \n";
			strSql += "  	F_T_DATETOSTRING(B2.EXPR_DT) BILL_EXPR_DT ,  \n";
			strSql += "  	--지급어음 반제  \n";
			strSql += "  	B3.CHK_BILL_NO BILL_NO_R ,  \n";
			strSql += "  	F_T_DATETOSTRING(B3.PUBL_DT) BILL_PUBL_DT_R ,  \n";
			strSql += "  	F_T_DATETOSTRING(B3.EXPR_DT) BILL_EXPR_DT_R ,  \n";
			strSql += "  	F_T_DATETOSTRING(B3.CHG_EXPR_DT) BILL_CHG_EXPR_DT_R ,  \n";
			strSql += "     	--받을어음설정 \n";
			strSql += "       	A1.REC_BILL_NO_MNG , \n";
			strSql += "       	A1.REC_BILL_NO_MNG_TG , \n";
			strSql += "       	AA.REC_BILL_NO , \n";
			strSql += "       	C1.REC_CHK_BILL_NO REC_BILL_NO_S , \n";
			strSql += "       	F_T_DATETOSTRING(C1.PUBL_DT) REC_BILL_PUBL_DT , \n";
			strSql += "       	F_T_DATETOSTRING(C1.EXPR_DT) REC_BILL_EXPR_DT , \n";
			strSql += "       	--받을어음반제 \n";
			strSql += "       	C2.REC_CHK_BILL_NO REC_BILL_NO_R , \n";
			strSql += "       	F_T_DATETOSTRING(C2.PUBL_DT) REC_BILL_PUBL_DT_R , \n";
			strSql += "       	F_T_DATETOSTRING(C2.EXPR_DT) REC_BILL_EXPR_DT_R , \n";
			strSql += "       	TO_CHAR(C2.PUBL_AMT, 'FM9,999,999,999,999') REC_BILL_PUBL_AMT_R , \n";
			strSql += "       	F_T_DATETOSTRING(C2.DISH_DT) REC_BILL_DISH_DT_R , \n";
			strSql += "       	F_T_DATETOSTRING(C2.TRUST_DT) REC_BILL_TRUST_DT_R , \n";
			strSql += "       	C2.TRUST_BANK_CODE REC_BILL_TRUST_BANK_CODE_R, \n";
			strSql += "       	C21.BANK_NAME REC_BILL_TRUST_BANK_NAME_R , \n";
			strSql += "       	F_T_DATETOSTRING(C2.DISC_DT) REC_BILL_DISC_DT_R , \n";
			strSql += "       	C2.DISC_BANK_CODE REC_BILL_DISC_BANK_CODE_R, \n";
			strSql += "       	C22.BANK_NAME REC_BILL_DISC_BANK_NAME_R , \n";
			strSql += "       	TO_CHAR(C2.DISC_RAT, 'FM9,999,999,999,999') REC_BILL_DISC_RAT_R, \n";
			strSql += "       	TO_CHAR(C2.DISC_AMT, 'FM9,999,999,999,999') REC_BILL_DISC_AMT_R, \n";
			strSql += "  	--CP 매입  \n";
			strSql += "  	A1.CP_NO_MNG ,  \n";
			strSql += "  	A1.CP_NO_MNG_TG ,  \n";
			strSql += "  	AA.CP_NO ,  \n";
			strSql += "  	--CP설정  \n";
			strSql += "  	D1.CP_NO CP_NO_S ,  \n";
			strSql += "  	F_T_DATETOSTRING(D1.PUBL_DT) CP_BUY_PUBL_DT,  \n";
			strSql += "  	F_T_DATETOSTRING(D1.EXPR_DT) CP_BUY_EXPR_DT,  \n";
			strSql += "  	F_T_DATETOSTRING(D1.DUSE_DT) CP_BUY_DUSE_DT,  \n";
			strSql += "  	TO_CHAR(D1.PUBL_AMT, 'FM9,999,999,999,999') CP_BUY_PUBL_AMT,  \n";
			strSql += "  	TO_CHAR(D1.INCOME_AMT, 'FM9,999,999,999,999') CP_BUY_INCOME_AMT,  \n";
			strSql += "  	D1.PUBL_PLACE CP_BUY_PUBL_PLACE,  \n";
			strSql += "  	D1.PUBL_NAME CP_BUY_PUBL_NAME,  \n";
			strSql += "  	D1.INTR_RAT CP_BUY_INTR_RAT,  \n";
			strSql += "  	D1.CUST_SEQ CP_BUY_CUST_SEQ,  \n";
			strSql += "  	F_T_CUST_MASK(D11.CUST_CODE) CP_BUY_CUST_CODE,  \n";
			strSql += "  	D11.CUST_NAME CP_BUY_CUST_NAME,  \n";
			strSql += "  	--CP반제  \n";
			strSql += "  	D2.CP_NO CP_NO_R ,  \n";
			strSql += "  	F_T_DATETOSTRING(D2.PUBL_DT) CP_BUY_PUBL_DT_R,  \n";
			strSql += "  	F_T_DATETOSTRING(D2.EXPR_DT) CP_BUY_EXPR_DT_R,  \n";
			strSql += "  	F_T_DATETOSTRING(D2.DUSE_DT) CP_BUY_DUSE_DT_R,  \n";
			strSql += "  	TO_CHAR(D2.PUBL_AMT, 'FM9,999,999,999,999') CP_BUY_PUBL_AMT_R,  \n";
			strSql += "  	TO_CHAR(D2.INCOME_AMT, 'FM9,999,999,999,999') CP_BUY_INCOME_AMT_R,  \n";
			strSql += "  	D2.PUBL_PLACE CP_BUY_PUBL_PLACE_R,  \n";
			strSql += "  	D2.PUBL_NAME CP_BUY_PUBL_NAME_R,  \n";
			strSql += "  	D2.INTR_RAT CP_BUY_INTR_RAT_R,  \n";
			strSql += "  	D2.CUST_SEQ CP_BUY_CUST_SEQ_R,  \n";
			strSql += "  	F_T_CUST_MASK(D21.CUST_CODE) CP_BUY_CUST_CODE_R,  \n";
			strSql += "  	D21.CUST_NAME CP_BUY_CUST_NAME_R,  \n";
			strSql += "  	TO_CHAR(D2.RESET_AMT, 'FM9,999,999,999,999') CP_BUY_RESET_AMT_R,  \n";
			strSql += "  	--유가증권  \n";
			strSql += "  	A1.SECU_MNG ,  \n";
			strSql += "  	A1.SECU_MNG_TG ,  \n";
			strSql += "  	AA.SECU_NO ,  \n";
			strSql += "  	NVL(E1.REAL_SECU_NO,'')||NVL(E2.REAL_SECU_NO,'') SECU_REAL_SECU_NO,  \n";
			strSql += "  	--유가증권 설정  \n";
			strSql += "  	E1.SECU_NO SECU_NO_S ,  \n";
			strSql += "  	E1.REAL_SECU_NO SECU_REAL_SECU_NO_S,  \n";
			strSql += "  	E1.SEC_KIND_CODE SECU_SEC_KIND_CODE,  \n";
			strSql += "  	E1.GET_DT SECU_GET_DT,  \n";
			strSql += "  	E1.GET_PLACE SECU_GET_PLACE,  \n";
			strSql += "  	TO_CHAR(E1.PERSTOCK_AMT, 'FM9,999,999,999,999') SECU_PERSTOCK_AMT ,  \n";
			strSql += "  	TO_CHAR(E1.INCOME_AMT, 'FM9,999,999,999,999') SECU_INCOME_AMT,  \n";
			strSql += "  	TO_CHAR(E1.BF_GET_ITR_AMT, 'FM9,999,999,999,999') SECU_BF_GET_ITR_AMT,  \n";
			strSql += "  	TO_CHAR(E1.GET_ITR_AMT, 'FM9,999,999,999,999') SECU_GET_ITR_AMT,  \n";
			strSql += "  	F_T_DATETOSTRING(E1.PUBL_DT) SECU_PUBL_DT ,  \n";
			strSql += "  	E1.ITR_TAG SECU_ITR_TAG,  \n";
			strSql += "  	F_T_DATETOSTRING(E1.EXPR_DT) SECU_EXPR_DT ,  \n";
			strSql += "  	E1.INTR_RATE SECU_INTR_RATE ,  \n";
			strSql += "  	--유가증권 반제  \n";
			strSql += "  	E2.SECU_NO SECU_NO_R ,  \n";
			strSql += "  	E2.REAL_SECU_NO SECU_REAL_SECU_NO_R,  \n";
			strSql += "  	TO_CHAR(E2.PERSTOCK_AMT, 'FM9,999,999,999,999') SECU_PERSTOCK_AMT_R ,  \n";
			strSql += "  	F_T_DATETOSTRING(E2.PUBL_DT) SECU_PUBL_DT_R ,  \n";
			strSql += "  	F_T_DATETOSTRING(E2.EXPR_DT) SECU_EXPR_DT_R ,  \n";
			strSql += "  	E2.INTR_RATE SECU_INTR_RATE_R ,  \n";
			strSql += "  	TO_CHAR(E2.SALE_AMT, 'FM9,999,999,999,999') SECU_SALE_AMT_R ,  \n";
			strSql += "  	F_T_DATETOSTRING(E2.SALE_DT) SECU_SALE_DT_R ,  \n";
			strSql += "  	F_T_DATETOSTRING(E2.RETURN_DT) SECU_RETURN_DT_R ,  \n";
			strSql += "  	E2.CONSIGN_BANK SECU_CONSIGN_BANK_R ,  \n";
			strSql += "  	E3.BANK_NAME SECU_CONSIGN_BANK_NAME_R ,  \n";
			strSql += "  	TO_CHAR(E2.SALE_ITR_AMT, 'FM9,999,999,999,999') SECU_SALE_ITR_AMT_R ,  \n";
			strSql += "  	TO_CHAR(E2.SALE_TAX, 'FM9,999,999,999,999') SECU_SALE_TAX_R ,  \n";
			strSql += "  	TO_CHAR(E2.SALE_LOSS, 'FM9,999,999,999,999') SECU_SALE_LOSS_R ,  \n";
			strSql += "  	TO_CHAR(E2.SALE_NP_ITR_AMT, 'FM9,999,999,999,999') SECU_SALE_NP_ITR_AMT_R ,  \n";
			strSql += "  	--차입  \n";
			strSql += "  	A1.LOAN_NO_MNG ,  \n";
			strSql += "  	A1.LOAN_NO_MNG_TG ,  \n";
			strSql += "  	AA.LOAN_REFUND_NO ,  \n";
			strSql += "  	AA.LOAN_REFUND_SEQ ,  \n";
			strSql += "  	--차입설정  \n";
			strSql += "  	F1.LOAN_NO LOAN_REFUND_NO_S,  \n";
			strSql += "  	F1.LOAN_REFUND_SEQ LOAN_REFUND_SEQ_S,  \n";
			strSql += "  	F_T_DATETOSTRING(F1.TRANS_DT) LOAN_TRANS_DT,  \n";
			strSql += "  	F_T_DATETOSTRING(F1.LOAN_FDT) LOAN_FDT ,  \n";
			strSql += "  	F_T_DATETOSTRING(F1.LOAN_EXPR_DT) LOAN_EXPR_DT ,  \n";
			strSql += "  	F1.REAL_INTR_RATE LOAN_REAL_INTR_RATE ,  \n";
			strSql += "  	F1.TITLE_INTR_RATE LOAN_TITLE_INTR_RATE ,  \n";
			strSql += "  	--차입반제  \n";
			strSql += "  	F2.LOAN_NO LOAN_REFUND_NO_R ,  \n";
			strSql += "  	F2.LOAN_REFUND_SEQ LOAN_REFUND_SEQ_R ,  \n";
			strSql += "  	F_T_DATETOSTRING(F2.TRANS_DT) LOAN_TRANS_DT_R,  \n";
			strSql += "  	F_T_DATETOSTRING(F2.REFUND_SCH_DT) LOAN_REFUND_SCH_DT_R ,  \n";
			strSql += "  	TO_CHAR(F2.REFUND_SCH_ORG_AMT, 'FM9,999,999,999,999') LOAN_REFUND_SCH_ORG_AMT_R ,  \n";
			strSql += "  	TO_CHAR(F2.REFUND_SCH_INTR_AMT, 'FM9,999,999,999,999') LOAN_REFUND_SCH_INTR_AMT_R ,  \n";
			strSql += "  	DECODE(NVL(F2.REFUND_AMT,0), 0, NULL, F_T_DATETOSTRING(F2.REFUND_INTR_DT)) LOAN_REFUND_DT_R ,  \n";
			strSql += "  	--차입이자  \n";
			strSql += "  	F3.LOAN_NO LOAN_REFUND_NO_I ,  \n";
			strSql += "  	F3.LOAN_REFUND_SEQ LOAN_REFUND_SEQ_I ,  \n";
			strSql += "  	F_T_DATETOSTRING(F3.REFUND_SCH_DT) LOAN_REFUND_SCH_DT_I ,  \n";
			strSql += "  	F3.REFUND_SCH_ORG_AMT LOAN_REFUND_SCH_ORG_AMT_I ,  \n";
			strSql += "  	DECODE(NVL(F3.INTR_AMT,0), 0, NULL, F_T_DATETOSTRING(F3.REFUND_INTR_DT)) LOAN_INTR_DT_I ,  \n";
			strSql += "  	--고정자산  \n";
			strSql += "  	A1.FIXED_MNG ,  \n";
			strSql += "  	A1.FIXED_MNG_TG ,  \n";
			strSql += "  	--적금  \n";
			strSql += "  	A1.DEPOSIT_PAY_MNG ,  \n";
			strSql += "  	A1.DEPOSIT_PAY_MNG_TG ,  \n";
			strSql += "  	AA.DEPOSIT_ACCNO ,  \n";
			strSql += "  	AA.PAYMENT_SEQ ,  \n";
			strSql += "  	F_T_DATETOSTRING(G1.PAYMENT_SCH_DT) PAYMENT_SCH_DT ,  \n";
			strSql += "  	TO_CHAR(G1.PAYMENT_SCH_AMT, 'FM9,999,999,999,999') PAYMENT_SCH_AMT ,  \n";
			strSql += "  	F_T_DATETOSTRING(G1.PAYMENT_DT) PAYMENT_DT ,  \n";
			strSql += "  	TO_CHAR(G1.PAYMENT_AMT, 'FM9,999,999,999,999') PAYMENT_AMT ,  \n";
			strSql += "  	--대금지불조건  \n";
			strSql += "  	A1.PAY_CON_MNG ,  \n";
			strSql += "  	A1.PAY_CON_MNG_TG ,  \n";
			strSql += "  	TO_CHAR(AA.PAY_CON_CASH, 'FM9,999,999,999,999') PAY_CON_CASH ,  \n";
			strSql += "  	TO_CHAR(AA.PAY_CON_BILL, 'FM9,999,999,999,999') PAY_CON_BILL ,  \n";
			strSql += "  	TO_CHAR(AA.PAY_CON_BILL_DAYS, 'FM9,999,999,999,999') PAY_CON_BILL_DAYS ,  \n";
			strSql += "  	A1.BILL_EXPR_MNG ,  \n";
			strSql += "  	A1.BILL_EXPR_MNG_TG ,  \n";
			strSql += "  	F_T_DATETOSTRING(AA.PAY_CON_BILL_DT) PAY_CON_BILL_DT ,  \n";
			strSql += "  	--사원번호  \n";
			strSql += "  	A1.EMP_NO_MNG ,  \n";
			strSql += "  	A1.EMP_NO_MNG_TG ,  \n";
			strSql += "  	AA.EMP_NO ,  \n";
			strSql += "  	ZZ.NAME EMP_NAME ,  \n";
			strSql += "  	--지급희망일  \n";
			strSql += "  	A1.ANTICIPATION_DT_MNG ,  \n";
			strSql += "  	A1.ANTICIPATION_DT_MNG_TG ,  \n";
			strSql += "  	F_T_DATETOSTRING(AA.ANTICIPATION_DT) ANTICIPATION_DT ,  \n";
			strSql += "  	--현금영수증  \n";
			strSql += "  	DECODE(A4.SLIP_DETAIL_LIST,'P','T','F') CASH_MNG,  \n";
			strSql += "  	H1.CASH_SEQ,  \n";
			strSql += "  	H1.CASHNO CASH_CASHNO,  \n";
			strSql += "  	F_T_DATETOSTRING(H1.USE_DT) CASH_USE_DT,  \n";
			strSql += "  	TO_CHAR(H1.TRADE_AMT, 'FM9,999,999,999,999') CASH_TRADE_AMT,  \n";
			strSql += "  	H1.REQ_TG CASH_REQ_TG,  \n";
			strSql += "  	--신용카드  \n";
			strSql += "  	DECODE(A4.SLIP_DETAIL_LIST,'C','T','F') CARD_MNG,  \n";
			strSql += "  	I1.CARD_SEQ,  \n";
			strSql += "  	I1.CARDNO CARD_CARDNO,  \n";
			strSql += "  	F_T_DATETOSTRING(I1.USE_DT) CARD_USE_DT,  \n";
			strSql += "  	I1.HAVE_PERS CARD_HAVE_PERS,  \n";
			strSql += "  	TO_CHAR(I1.TRADE_AMT, 'FM9,999,999,999,999') CARD_TRADE_AMT,  \n";
			strSql += "  	I1.REQ_TG CARD_REQ_TG,  \n";
			strSql += "  	--관리항목  \n";
			strSql += "  	A1.MNG_NAME_CHAR1 ,  \n";
			strSql += "  	A1.MNG_TG_CHAR1 ,  \n";
			strSql += "  	AA.MNG_ITEM_CHAR1 ,  \n";
			strSql += "  	A1.MNG_NAME_CHAR2 ,  \n";
			strSql += "  	A1.MNG_TG_CHAR2 ,  \n";
			strSql += "  	AA.MNG_ITEM_CHAR2 ,  \n";
			strSql += "  	A1.MNG_NAME_CHAR3 ,  \n";
			strSql += "  	A1.MNG_TG_CHAR3 ,  \n";
			strSql += "  	AA.MNG_ITEM_CHAR3 ,  \n";
			strSql += "  	A1.MNG_NAME_CHAR4 ,  \n";
			strSql += "  	A1.MNG_TG_CHAR4 ,  \n";
			strSql += "  	AA.MNG_ITEM_CHAR4 ,  \n";
			strSql += "  	A1.MNG_NAME_NUM1 ,  \n";
			strSql += "  	A1.MNG_TG_NUM1 ,  \n";
			strSql += "  	TO_CHAR(AA.MNG_ITEM_NUM1, 'FM9,999,999,999,999') MNG_ITEM_NUM1 ,  \n";
			strSql += "  	A1.MNG_NAME_NUM2 ,  \n";
			strSql += "  	A1.MNG_TG_NUM2 ,  \n";
			strSql += "  	TO_CHAR(AA.MNG_ITEM_NUM2, 'FM9,999,999,999,999') MNG_ITEM_NUM2 ,  \n";
			strSql += "  	A1.MNG_NAME_NUM3 ,  \n";
			strSql += "  	A1.MNG_TG_NUM3 ,  \n";
			strSql += "  	TO_CHAR(AA.MNG_ITEM_NUM3, 'FM9,999,999,999,999') MNG_ITEM_NUM3 ,  \n";
			strSql += "  	A1.MNG_NAME_NUM4 ,  \n";
			strSql += "  	A1.MNG_TG_NUM4 ,  \n";
			strSql += "  	TO_CHAR(AA.MNG_ITEM_NUM1, 'FM9,999,999,999,999') MNG_ITEM_NUM4 ,  \n";
			strSql += "  	A1.MNG_NAME_DT1 ,  \n";
			strSql += "  	A1.MNG_TG_DT1 ,  \n";
			strSql += "  	F_T_DATETOSTRING(AA.MNG_ITEM_DT1) MNG_ITEM_DT1 ,  \n";
			strSql += "  	A1.MNG_NAME_DT2 ,  \n";
			strSql += "  	A1.MNG_TG_DT2 ,  \n";
			strSql += "  	F_T_DATETOSTRING(AA.MNG_ITEM_DT2) MNG_ITEM_DT2 ,  \n";
			strSql += "  	A1.MNG_NAME_DT3 ,  \n";
			strSql += "  	A1.MNG_TG_DT3 ,  \n";
			strSql += "  	F_T_DATETOSTRING(AA.MNG_ITEM_DT3) MNG_ITEM_DT3 ,  \n";
			strSql += "  	A1.MNG_NAME_DT4 ,  \n";
			strSql += "  	A1.MNG_TG_DT4 ,  \n";
			strSql += "  	F_T_DATETOSTRING(AA.MNG_ITEM_DT4) MNG_ITEM_DT4 ,  \n";
			strSql += "  	DECODE( AA.RESET_SLIP_ID, NULL, '', 0, '', F_T_Get_Make_Slipno(AA.RESET_SLIP_ID, AA.RESET_SLIP_IDSEQ) ) RESET_SLIPNO  \n";
			strSql += " From \n";
			strSql += "  	( \n";
			strSql += " 		Select \n";
			strSql += " 			A.SLIP_ID ,  \n";
			strSql += " 			A.MAKE_SLIPCLS ,  \n";
			strSql += " 			A.MAKE_SLIPNO ,  \n";
			strSql += " 			A.MAKE_COMP_CODE ,  \n";
			strSql += " 			B.COMPANY_NAME ,  \n";
			strSql += " 			A.MAKE_DEPT_CODE ,  \n";
			strSql += " 			C.DEPT_NAME MAKE_DEPT_NAME ,  \n";
			strSql += " 			A.MAKE_DT ,  \n";
			strSql += " 			A.MAKE_DT_TRANS ,  \n";
			strSql += " 			A.MAKE_SEQ ,  \n";
			strSql += " 			A.INOUT_DEPT_CODE ,  \n";
			strSql += " 			D.DEPT_NAME  INOUT_DEPT_NAME ,  \n";
			strSql += " 			A.MAKE_PERS ,  \n";
			strSql += " 			A.MAKE_NAME ,  \n";
			strSql += " 			A.GROUPWARE_SLIPSTATUS ,  \n";
			strSql += " 			DECODE(A.KEEP_SLIPNO, NULL, 'F', 'T') KEEP_CLS ,  \n";
			strSql += " 			A.KEEP_SLIPNO ,  \n";
			strSql += " 			A.KEEP_DT ,  \n";
			strSql += " 			A.KEEP_DT_TRANS ,  \n";
			strSql += " 			A.KEEP_SEQ ,  \n";
			strSql += " 			A.KEEP_DEPT_CODE ,  \n";
			strSql += " 			E.DEPT_NAME KEEP_DEPT_NAME ,  \n";
			strSql += " 			A.KEEP_KEEPER ,  \n";
			strSql += " 			A.WORK_CODE ,  \n";
			strSql += " 			F.WORK_NAME ,  \n";
			strSql += " 			A.CHARGE_PERS ,  \n";
			strSql += " 			G.NAME CHARGE_PERS_NAME ,  \n";
			strSql += " 			A.SLIP_KIND_TAG ,  \n";
			strSql += " 			NVL(A.TRANSFER_TAG, 'F') TRANSFER_TAG,  \n";
			strSql += " 			NVL(A.IGNORE_SET_RESET_TAG, 'F') IGNORE_SET_RESET_TAG,  \n";
			strSql += " 			NVL(F.SLIP_UPDATE_CLS, 'T') SLIP_UPDATE_CLS,  \n";
			strSql += " 			'F' UPDATE_TEMP  \n";
			strSql += " 		From \n";
			strSql += " 			T_ACC_SLIP_HEAD A,  \n";
			strSql += " 			T_COMPANY B,  \n";
			strSql += " 			T_DEPT_CODE C,  \n";
			strSql += " 			T_DEPT_CODE D,  \n";
			strSql += " 			T_DEPT_CODE E,  \n";
			strSql += " 			T_WORK_CODE F,  \n";
			strSql += " 			Z_AUTHORITY_USER G  \n";
			strSql += " 		Where \n";
			strSql += " 			A.MAKE_COMP_CODE = B.COMP_CODE  \n";
			strSql += " 			And		A.MAKE_DEPT_CODE = C.DEPT_CODE  \n";
			strSql += " 			And		A.INOUT_DEPT_CODE = D.DEPT_CODE(+)  \n";
			strSql += " 			And		A.KEEP_DEPT_CODE = E.DEPT_CODE(+)  \n";
			strSql += " 			And		A.WORK_CODE = F.WORK_CODE(+)  \n";
			strSql += " 			And		A.CHARGE_PERS = G.EMPNO(+) \n";
			strSql += " 			-- 헤더조건 추가 \n";
			strSql += " 			--발의일자 / 확정일자 \n";
			strSql += " 			AND ( \n";
			strSql += " 				( 'M'= ?  AND A.MAKE_DT BETWEEN  F_T_STRINGTODATE(?)  AND  F_T_STRINGTODATE(?)  ) \n";
			strSql += " 				OR \n";
			strSql += " 				( 'K'= ?  AND A.KEEP_DT BETWEEN   F_T_STRINGTODATE(?)  AND  F_T_STRINGTODATE(?)  ) \n";
			strSql += " 			) \n";
			strSql += " 			--사업장 \n";
			strSql += " 			AND A.MAKE_COMP_CODE LIKE  ? ||'%' \n";
			strSql += " 			--확정구분 \n";
			strSql += " 			AND ( \n";
			strSql += " 				('A'= ? ) \n";
			strSql += " 				OR \n";
			strSql += " 				('M'= ? ) AND A.KEEP_DT IS NULL \n";
			strSql += " 				OR \n";
			strSql += " 				('K'= ? ) AND A.KEEP_DT IS NOT NULL \n";
			strSql += " 			) \n";
			strSql += " 			--발의부서 \n";
			strSql += " 			AND A.MAKE_DEPT_CODE LIKE  ? ||'%' \n";
			strSql += " 			--발의자 \n";
			strSql += " 			AND ''||A.MAKE_PERS LIKE  ? ||'%' \n";
			strSql += " 			--관리담당 \n";
			strSql += " 			AND ''||A.CHARGE_PERS LIKE  ? ||'%' \n";
			strSql += " 	) A, \n";
			strSql += " 	T_ACC_SLIP_BODY AA,  \n";
			strSql += " 	T_ACC_CODE A1,  \n";
			strSql += " 	T_DEPT_CODE_ORG A2,  \n";
			strSql += " 	T_CLASS_CODE A3,  \n";
			strSql += " 	T_ACC_VAT_CODE A4,  \n";
			strSql += " 	T_BANK_CODE A5,  \n";
			strSql += " 	T_CUST_CODE A6,  \n";
			strSql += " 	T_COMPANY A7,  \n";
			strSql += " 	T_FIN_PAY_CHK_BILL B1,  \n";
			strSql += " 	T_FIN_PAY_CHK_BILL B2,  \n";
			strSql += " 	T_FIN_PAY_CHK_BILL B3,  \n";
			strSql += " 	T_FIN_RECEIVE_CHK_BILL C1,  \n";
			strSql += " 	T_FIN_RECEIVE_CHK_BILL C2,  \n";
			strSql += "			T_BANK_CODE C21, \n";
			strSql += "			T_BANK_CODE C22, \n";
			strSql += " 	T_FIN_CP_BUY D1,  \n";
			strSql += " 	T_CUST_CODE D11,  \n";
			strSql += " 	T_FIN_CP_BUY D2,  \n";
			strSql += " 	T_CUST_CODE D21,  \n";
			strSql += " 	T_FIN_SECURTY E1,  \n";
			strSql += " 	T_FIN_SECURTY E2,  \n";
			strSql += " 	T_BANK_CODE E3,  \n";
			strSql += " 	(  \n";
			strSql += " 	SELECT  \n";
			strSql += " 		A.*,  \n";
			strSql += " 		B.LOAN_REFUND_SEQ,  \n";
			strSql += " 		B.TRANS_DT,  \n";
			strSql += " 		B.LOAN_AMT,  \n";
			strSql += " 		B.LOAN_SLIP_ID,  \n";
			strSql += " 		B.LOAN_SLIP_IDSEQ   \n";
			strSql += " 	FROM  \n";
			strSql += "  		T_FIN_LOAN_SHEET A,  \n";
			strSql += "  		T_FIN_LOAN_REFUND_LIST B  \n";
			strSql += " 	WHERE  \n";
			strSql += " 		A.LOAN_NO = B.LOAN_NO  \n";
			strSql += " 	) F1,  \n";
			strSql += " 	T_FIN_LOAN_REFUND_LIST F2,  \n";
			strSql += " 	T_FIN_LOAN_REFUND_LIST F3,  \n";
			strSql += " 	T_DEPOSIT_PAYMENT_LIST G1,  \n";
			strSql += " 	T_ACC_SLIP_EXPENSE_CASH H1,  \n";
			strSql += " 	T_ACC_SLIP_EXPENSE_CARDS I1,  \n";
			strSql += " 	Z_AUTHORITY_USER ZZ  \n";
			strSql += " Where \n";
			strSql += " 	A.SLIP_ID = AA.SLIP_ID \n";
			strSql += " 	And		AA.ACC_CODE = A1.ACC_CODE  \n";
			strSql += " 	And		AA.DEPT_CODE = A2.DEPT_CODE  \n";
			strSql += " 	And		AA.CLASS_CODE = A3.CLASS_CODE(+)  \n";
			strSql += " 	And		AA.VAT_CODE = A4.VAT_CODE(+)  \n";
			strSql += " 	And		AA.BANK_CODE = A5.BANK_CODE(+)  \n";
			strSql += " 	And		AA.CUST_SEQ = A6.CUST_SEQ(+)  \n";
			strSql += " 	And		AA.TAX_COMP_CODE = A7.COMP_CODE(+)  \n";
			strSql += " 	And		AA.SLIP_ID = B1.SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = B1.SLIP_IDSEQ(+)  \n";
			strSql += " 	And		B1.CHK_BILL_CLS(+) = 'C'  \n";
			strSql += " 	And		AA.SLIP_ID = B2.SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = B2.SLIP_IDSEQ(+)  \n";
			strSql += " 	And		B2.CHK_BILL_CLS(+) = 'B'  \n";
			strSql += " 	And		AA.SLIP_ID = B3.RESET_SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = B3.RESET_SLIP_IDSEQ(+)  \n";
			strSql += " 	And		B3.CHK_BILL_CLS(+) = 'B'  \n";
			strSql += " 	And		AA.SLIP_ID = C1.SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = C1.SLIP_IDSEQ(+)  \n";
			strSql += " 	And		AA.SLIP_ID = C2.RESET_SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = C2.RESET_SLIP_IDSEQ(+)  \n";
			strSql += " 	And		C2.TRUST_BANK_CODE = C21.BANK_CODE(+) \n";
			strSql += " 	And		C2.DISC_BANK_CODE = C22.BANK_CODE(+) \n";
			strSql += " 	And		AA.SLIP_ID = D1.SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = D1.SLIP_IDSEQ(+)  \n";
			strSql += " 	And		D1.CUST_SEQ = D11.CUST_SEQ(+)  \n";
			strSql += " 	And		AA.SLIP_ID = D2.RESET_SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = D2.RESET_SLIP_IDSEQ(+)  \n";
			strSql += " 	And		D2.CUST_SEQ = D21.CUST_SEQ(+)  \n";
			strSql += " 	And		AA.SLIP_ID = E1.SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = E1.SLIP_IDSEQ(+)  \n";
			strSql += " 	And		AA.SLIP_ID = E2.RESET_SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = E2.RESET_SLIP_IDSEQ(+)  \n";
			strSql += " 	And		E2.CONSIGN_BANK = E3.BANK_CODE(+)  \n";
			strSql += " 	And		AA.SLIP_ID = F1.LOAN_SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = F1.LOAN_SLIP_IDSEQ(+)  \n";
			strSql += " 	And		AA.SLIP_ID = F2.REFUND_SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = F2.REFUND_SLIP_IDSEQ(+)  \n";
			strSql += " 	And		AA.SLIP_ID = F3.INTR_SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = F3.INTR_SLIP_IDSEQ(+)  \n";
			strSql += " 	And		AA.SLIP_ID = G1.SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = G1.SLIP_IDSEQ(+)  \n";
			strSql += " 	And		AA.SLIP_ID = H1.SLIP_ID(+)  \n";
			strSql += " 	And		AA.SLIP_IDSEQ = H1.SLIP_IDSEQ(+)  \n";
			strSql += " 	And		AA.SLIP_ID = I1.SLIP_ID(+)   \n";
			strSql += " 	And		AA.SLIP_IDSEQ = I1.SLIP_IDSEQ(+)   \n";
			strSql += " 	And		AA.EMP_NO = ZZ.EMPNO(+)  \n";
			strSql += " 	-- 바디조건 추가 \n";
			strSql += " 	--거래처 \n";
			if(!"".equals(strCUST_CODE)) strSql += " 	AND A6.CUST_CODE LIKE  ? ||'%' \n";
			strSql += " 	--금액 \n";
			if("A".equals(strAMT_CLS)) {
				if(!"".equals(strDBCR_FAMT)) strSql += " 	AND NVL(AA.DB_AMT,0)+NVL(AA.CR_AMT,0)>= ?  \n";
				if(!"".equals(strDBCR_EAMT)) strSql += " 	AND NVL(AA.DB_AMT,0)+NVL(AA.CR_AMT,0)<= ?  \n";
			} else if("D".equals(strAMT_CLS)) {
				if(!"".equals(strDBCR_FAMT)) strSql += " 	AND NVL(AA.DB_AMT,0)>= ?  \n";
				if(!"".equals(strDBCR_EAMT)) strSql += " 	AND NVL(AA.DB_AMT,0)<= ?  \n";
			} else if("C".equals(strAMT_CLS)) {
				if(!"".equals(strDBCR_FAMT)) strSql += " 	AND NVL(AA.CR_AMT,0)>= ?  \n";
				if(!"".equals(strDBCR_EAMT)) strSql += " 	AND NVL(AA.CR_AMT,0)<= ?  \n";
			}
			strSql += " 	--계정과목 \n";
			strSql += " 	AND AA.ACC_CODE LIKE  ? ||'%' \n";
			strSql += " 	--부가세코드 \n";
			if(!"".equals(strVAT_CODE)) strSql += " 	AND AA.VAT_CODE LIKE  ? ||'%' \n";
			strSql += " 	--귀속부서 \n";
			if(!"".equals(strDEPT_CODE)) {
				strSql += " 	AND AA.DEPT_CODE IN \n";
				strSql += " 	(  \n";
				strSql += " 	SELECT DEPT_CODE FROM (  \n";
				strSql += " 		SELECT  \n";
				strSql += " 			? DEPT_CODE, ROWNUM \n";
				strSql += " 		FROM DUAL  \n";
				strSql += " 		UNION ALL \n";
				strSql += " 		SELECT  \n";
				strSql += " 			Ai.DEPT_CODE, ROWNUM \n";
				strSql += " 		FROM T_DEPT_CODE_ORG Ai  \n";
				strSql += " 		CONNECT BY Ai.P_DEPT_CODE=PRIOR Ai.DEPT_CODE \n";
				strSql += " 		START WITH Ai.DEPT_CODE=? AND Ai.DEPT_KIND_TAG='0300' \n";
				strSql += " 	) \n";
				strSql += " 	) \n";
			}
			strSql += " 	--적요 \n";
			if(!"".equals(strSUMMARY1)) strSql += " 	AND AA.SUMMARY1 LIKE  ? ||'%' \n";
			strSql += " 	--세무사업장 \n";
			strSql += " 	AND AA.TAX_COMP_CODE LIKE  ? ||'%' \n";
			strSql += " 	AND A2.EMP_CLASS_CODE LIKE  ? ||'%' \n";
			strSql += " Order By AA.SLIP_ID, AA.MAKE_SLIPLINE  \n";
			strSql += "  ";
			
			lrArgData.addColumn("DATE_CLS1", CITData.VARCHAR2);
			lrArgData.addColumn("DT_F1", CITData.VARCHAR2);
			lrArgData.addColumn("DT_T1", CITData.VARCHAR2);
			lrArgData.addColumn("DATE_CLS2", CITData.VARCHAR2);
			lrArgData.addColumn("DT_F2", CITData.VARCHAR2);
			lrArgData.addColumn("DT_T2", CITData.VARCHAR2);
			lrArgData.addColumn("COMP_CODE", CITData.VARCHAR2);
			lrArgData.addColumn("KEEP_CLS1", CITData.VARCHAR2);
			lrArgData.addColumn("KEEP_CLS2", CITData.VARCHAR2);
			lrArgData.addColumn("KEEP_CLS3", CITData.VARCHAR2);
			lrArgData.addColumn("MAKE_DEPT_CODE", CITData.VARCHAR2);
			lrArgData.addColumn("CHARGE_PERS", CITData.VARCHAR2);
			lrArgData.addColumn("MAKE_PERS", CITData.VARCHAR2);
			if(!"".equals(strCUST_CODE)) lrArgData.addColumn("CUST_CODE", CITData.VARCHAR2);
			if(!"".equals(strDBCR_FAMT)) lrArgData.addColumn("DBCR_FAMT", CITData.VARCHAR2);
			if(!"".equals(strDBCR_EAMT)) lrArgData.addColumn("DBCR_EAMT", CITData.VARCHAR2);
			lrArgData.addColumn("ACC_CODE", CITData.VARCHAR2);
			if(!"".equals(strVAT_CODE)) lrArgData.addColumn("VAT_CODE", CITData.VARCHAR2);
			if(!"".equals(strDEPT_CODE)) lrArgData.addColumn("DEPT_CODE1", CITData.VARCHAR2);
			if(!"".equals(strDEPT_CODE)) lrArgData.addColumn("DEPT_CODE2", CITData.VARCHAR2);
			if(!"".equals(strSUMMARY1)) lrArgData.addColumn("SUMMARY1", CITData.VARCHAR2);
			lrArgData.addColumn("TAX_COMP_CODE", CITData.VARCHAR2);
			lrArgData.addColumn("EMP_CLASS_CODE", CITData.VARCHAR2);
			lrArgData.addRow();
			lrArgData.setValue("DATE_CLS1", strDATE_CLS);
			lrArgData.setValue("DT_F1", strDT_F);
			lrArgData.setValue("DT_T1", strDT_T);
			lrArgData.setValue("DATE_CLS2", strDATE_CLS);
			lrArgData.setValue("DT_F2", strDT_F);
			lrArgData.setValue("DT_T2", strDT_T);
			lrArgData.setValue("COMP_CODE", strCOMP_CODE);
			lrArgData.setValue("KEEP_CLS1", strKEEP_CLS);
			lrArgData.setValue("KEEP_CLS2", strKEEP_CLS);
			lrArgData.setValue("KEEP_CLS3", strKEEP_CLS);
			lrArgData.setValue("MAKE_DEPT_CODE", strMAKE_DEPT_CODE);
			lrArgData.setValue("CHARGE_PERS", strCHARGE_PERS);
			lrArgData.setValue("MAKE_PERS", strMAKE_PERS);
			if(!"".equals(strCUST_CODE)) lrArgData.setValue("CUST_CODE", strCUST_CODE);
			if(!"".equals(strDBCR_FAMT)) lrArgData.setValue("DBCR_FAMT", strDBCR_FAMT);
			if(!"".equals(strDBCR_EAMT)) lrArgData.setValue("DBCR_EAMT", strDBCR_EAMT);
			lrArgData.setValue("ACC_CODE", strACC_CODE);
			if(!"".equals(strVAT_CODE)) lrArgData.setValue("VAT_CODE", strVAT_CODE);
			if(!"".equals(strDEPT_CODE)) lrArgData.setValue("DEPT_CODE1", strDEPT_CODE);
			if(!"".equals(strDEPT_CODE)) lrArgData.setValue("DEPT_CODE2", strDEPT_CODE);
			if(!"".equals(strSUMMARY1)) lrArgData.setValue("SUMMARY1", strSUMMARY1);
			lrArgData.setValue("TAX_COMP_CODE", strTAX_COMP_CODE);
			lrArgData.setValue("EMP_CLASS_CODE", strEMP_CLASS_CODE);
			try
			{
				lrReturnData = CITDatabase.selectQuery(strSql, lrArgData);
				


				
				lrDataset = CITCommon.toGauceDataSet(lrReturnData);
				GauceInfo.response.enableFirstRow(lrDataset);
				lrDataset.flush();
			}
			catch (Exception ex)
			{
				if (GauceInfo == null) GauceInfo = new CITGauceInfo(request, response);
				GauceInfo.response.writeException("USER", "900001","MAIN Select 오류-> "+ ex.getMessage());
			}
		}

	}
	catch (Exception ex)
	{
		if (GauceInfo == null) GauceInfo = new CITGauceInfo(request, response);
		GauceInfo.response.writeException("SYS", "100001", "페이지 초기화 오류 -> " + ex.getMessage());
	}
	finally
	{
		try
		{
			CITCommon.finalServerPage(GauceInfo);
		}
		catch (Exception ex)
		{
			if (GauceInfo == null) GauceInfo = new CITGauceInfo(request, response);
			GauceInfo.response.writeException("SYS", "100002", "페이지 종료 오류 -> " + ex.getMessage());
		}
	}
%>